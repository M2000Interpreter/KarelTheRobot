ΤΜΗΜΑ ΓΕΝΙΚΟ Α {// Έκδοση 1.0
Λίστα1$={
      {    
          "Magic Id" : "11223344Karel",
          "Locale Id" : 1032,
          "\u03A4\u03AF\u03C4\u03BB\u03BF\u03C2 \u039A\u03CC\u03C3\u03BC\u03BF\u03C5" : "\u039A\u039F\u03A3\u039C\u039F\u03A31",
          "\u039A\u03CC\u03C3\u03BC\u03BF\u03C2" : {        
              "\u03A0\u03BB\u03AC\u03C4\u03BF\u03C2" : 20,
              "\u038E\u03C8\u03BF\u03C2" : 10,
              "\u0395\u03BC\u03C0\u03CC\u03B4\u03B9\u03B1" : {            
                  "1, 1" : 1,  "1, 2" : 1, "1, 3" : 1, "1, 4" : 1, "1, 5" : 1, "1, 6" : 1, "1, 7" : 1, "1, 8" : 1, "1, 9" : 1,
                  "2, 1" : 1, "2, 5" : 3, "2, 9" : 1, "3, 1" : 1, "3, 4" : 1, "3, 5" : 1, "3, 6" : 1, "3, 9" : 1, "4, 1" : 1,
                  "4, 5" : 1, "4, 9" : 1, "5, 1" : 3, "5, 2" : 3, "5, 3" : 3, "5, 4" : 3, "5, 5" : 3, "5, 6" : 3, "5, 7" : 3,
                  "5, 8" : 3, "5, 9" : 3, "6, 1" : 1, "6, 4" : 1, "6, 5" : 2, "6, 9" : 1, "7, 1" : 1, "7, 4" : 1, "7, 5" : 2,
                  "7, 9" : 1, "8, 1" : 1, "8, 2" : 1, "8, 3" : 2, "8, 4" : 1, "8, 5" : 2, "8, 6" : 1, "8, 7" : 1, "8, 8" : 1,
                  "8, 9" : 1, "9, 1" : 1, "9, 2" : 3, "9, 3" : 2, "9, 4" : 3, "9, 5" : 1, "9, 9" : 1, "10, 1" : 1, "10, 2" : 1,
                  "10, 4" : 3, "10, 5" : 2, "10, 9" : 1, "11, 1" : 1, "11, 3" : 3, "11, 4" : 2, "11, 5" : 1, "11, 9" : 1,
                  "12, 1" : 1, "12, 2" : 3, "12, 3" : 1, "12, 4" : 1, "12, 5" : 3, "12, 6" : 1, "12, 7" : 1, "12, 8" : 1,
                  "12, 9" : 1, "13, 1" : 1, "13, 2" : 2, "13, 3" : 3, "13, 5" : 3, "13, 9" : 1, "14, 1" : 1, "14, 3" : 2,
                  "14, 5" : 1, "14, 9" : 1, "15, 1" : 3, "15, 2" : 1, "15, 3" : 1, "15, 4" : 1, "15, 5" : 2, "15, 6" : 1,
                  "15, 7" : 1, "15, 8" : 1, "15, 9" : 1, "16, 1" : 1, "16, 5" : 1, "16, 9" : 1, "17, 1" : 1, "17, 5" : 1,
                  "17, 9" : 1, "18, 1" : 1, "18, 2" : 3, "18, 3" : 1, "18, 4" : 1, "18, 5" : 1, "18, 6" : 1, "18, 7" : 1,
                  "18, 8" : 1, "18, 9" : 2, "19, 1" : 1, "19, 2" : 4, "19, 3" : 4, "19, 4" : 4, "19, 5" : 4, "19, 6" : 4,
                  "19, 7" : 4, "19, 8" : 4, "19, 9" : 1
              },
              "\u039C\u03C0\u03B9\u03BC\u03C0\u03B5\u03C1" : {            
                  "2, 4" : 1, "2, 8" : 1, "2, 9" : 1, "3, 3" : 1, "3, 6" : 1, "4, 2" : 1, "5, 4" : 1, "6, 2" : 1, "6, 4" : 1,
                  "6, 8" : 1, "7, 4" : 1, "9, 2" : 1, "9, 3" : 1, "9, 4" : 1, "9, 9" : 1, "10, 3" : 1, "10, 4" : 1, "10, 6" : 1,
                  "10, 7" : 1, "11, 2" : 1, "11, 4" : 1, "11, 5" : 1, "13, 3" : 1, "15, 6" : 1, "15, 7" : 1, "16, 3" : 1,
                  "17, 3" : 1, "17, 9" : 1, "18, 9" : 1, "19, 6" : 1
              },
              "\u03A3\u03BA\u03BF\u03C0\u03CC\u03C2" : 2,
              "\u03A3\u03B7\u03BC\u03B5\u03B9\u03CE\u03C3\u03B5\u03B9\u03C2" : ""
          },
          "\u039A\u03AC\u03C1\u03B5\u03BB" : {        
              "\u03A3\u03AC\u03BA\u03BF\u03C2" : 10,
              "\u0398\u03AD\u03C3\u03B7\u03A7" : 5,
              "\u0398\u03AD\u03C3\u03B7\u03A5" : 1,
              "\u0392\u03BB\u03AD\u03C0\u03B5\u03B9" : 2,
              "\u03A7\u03C1\u03CE\u03BC\u03B1" : -16776960
          }
      }
}
Τιτλ$="Κόσμος του Κάρελ"
Τίτλος Τιτλ$
Ελληνικά
Γραμματοσειρά "Verdana"
Φαρδια 1
// Αλλαγή του πλάτους του ΤΑΒ (στη κονσόλα καλύτερα, αλλά και εδώ δεν πειράζει):
// Σ ή Συγγραφή (είναι ίδιο με το edit)
Συγγραφή ! 3
Περί ! ""
Περί Κάλεσε {
	Επίλεξε με Περί$
		Με "Σχεδιασμός"
		{
			Περί  "Σχεδιασμός", χ.σημεία*2/3, υ.σημεία*2/3, {
					[Επιστροφή]
					Ο Κάρελ μετακινείται με τα πλήκτρα Βορράς, Ανατολή, Νότος, Δύση χωρίς να τον εμποδίζουν τα τοιχώματα. Από τη λίστα Καθαρό, μέχρι Δεξί Άκρο, επιλέγουμε τι θα βάλουμε στο διαγώνιο (Νοτιοανατολικά). Για να δούμε γραμμές πρέπει να υπάρχουν δυο τουλάχιστον εισαγωγές. Οπότε βάζουμε κάτι και μετακινούμε τον Κάρελ ανατολικά ή νότια.
					Με τα εργαλεία στη λίστα Αλλαγή Στοιχείου μπορούμε να φτιάξουμε οποιοδήποτε σχέδιο χωρισμάτων. Τα χωρίσματα τα εμφανίζει το πρόγραμμα σαν να γράφει κείμενο. Σε κάθε νέα γραμμή κοιτάει την προηγούμενη, ακριβώς πάνω από κάθε θέση αν έχει "οδηγία" για να συνεχίσει κάποιες γραμμές.
					}
		}
		Με "Αποθήκευση"
		{
			Περί  "Αποθήκευση", χ.σημεία*2/3, υ.σημεία*2/3, {
					[Επιστροφή]
					Ο κόσμος αποθηκεύεται σε αρχείο με κατάληξη kword, και είναι της μορφής json. Αυτός ο Κόσμος χρησιμοποιείται από την εφαρμογή που εκτελεί τη προγράμματα της γλώσσας Κάρελ.
					Σε περίπτωση που δεν μπορείτε να αποθηκεύσετε (δεν αφήνει το πλαίσιο διαλόγου να γράψετε όνομα αρχείου) τότε συμβαίνει ο φάκελος που πάτε να γράψετε να είναι μαρκαρισμένος ως μόνο για ανάγνωση. Αν και άλλες διαδικασίες χρησιμοποιούν τους φακέλους χωρίς τον έλεγχο αυτό, το πλαίσιο διαλόγου για την αποθήκευση αρχείου το χρησιμοποιεί. Σε αυτήν την περίπτωση πρέπει να μπείτε μέσω cmd.exe στο φάκελο που περιέχει τον φάκελο που είναι μόνο για ανάγνωση και να δώσετε το attrib -r όνομα_φακέλου. Δηλαδή αυτό είναι θέμα χειρισμού του λειτουργικού και του συστήματος αρχείων, και όχι του προγράμματος.
					}
		}
		Με "Ρομπότ"
		{
			Περί  "Ρομπότ", χ.σημεία*2/3, υ.σημεία*2/3, {
					[Επιστροφή]
					Το ρομπότ κανονικά προχωράει μόνο μπροστά, και στρίβει μόνο αριστερά. Κινείται μόνο στους δρόμους και τις λεωφόρους. (αυθαίρεται μπορούμε να λέμε τις κάθετες δρόμους, και τις οριζόντιες λεωφόρους).
					Τα τοιχώματα στο τελικό πρόγραμμα (που εκτελεί προγράμματα στη γλώσσα Κάρελ) είναι "ηλεκτροφόρα" δηλαδή αν πέσει πάνω τους ο Κάρελ, τερματίζει η λειτουργία του.
					}
		}
		Με "Σελίδα Git"
			win "https://github.com/M2000Interpreter/KarelTheRobot"
		Με "Χειρισμός Προγράμματος"
		{
			Περί  "Χειρισμός Προγράμματος", χ.σημεία*2/3, υ.σημεία*2/3, {
					[Επιστροφή]
					Στα μπλε πλαίσια αν πατηθούν και τραβήξουμε το δείκτη θα δούμε μόνο οδηγίες, δεν θα περάσει η εντολή. Εξαίρεση σε αυτό έχουν τα πλήκτρα με τα σημεία του ορίζοντα, επειδή έχουν επανάληψη, δηλαδή όσο τα "πατάμε" προχωράει ο Κάρελ.
					Ειδικά το πλήκτρο Εμπρός, έχει δυο διαφορετικές λειτουργίες ανάλογα αν φτιάχνουμε το κόσμο ή αν κάνουμε έλεγχο. Κατά τη δημιουργία του κόσμου, με σύντομο πάτημα απλά μας λέει τι κάνει, αλλά αν το κρατήσουμε παραπάνω θα δώσει μια απλή μετακίνηση εμπρός (αν γίνεται), και αν συνεχίσουμε να το κρατάμε πατημένο θα ξεκινήσει η γρήγορη μετακίνηση εμπρός. Κατά τον έλεγχο το πλήκτρο Εμπρός πάει μόνο μια θέση μπροστά (αν γίνεται). Σε αυτήν την κατάσταση λειτουργίας, η γρήγορη κίνηση γίνεται με το αριστερό πλήκτρο του ποντικιού.
					}
		}		
		Με "Έλεγχος"
		{
			Περί  "Σχεδιασμός", χ.σημεία*2/3, υ.σημεία*2/3, {
			[Επιστροφή]
			Μπορείτε να δοκιμάσετε σαν παιχνίδι το κόσμο που φτιάξατε. Στο τέλος του παιχνιδιού ο κόσμος ξαναφτιάχνεται στην αρχική του μορφή (πιθανόν θα έχετε αφαιρέσει ή μετακινήσει ή προσθέσει τα μπίμπερ).
			Πάντα στις κάτω γραμμές φαίνονται οι "συνθήκες" του Κάρελ, που λένε τι έχει από εμπόδια γύρω του, αν έχει κάτι στη διασταύρωση (μπίμπερ, τουλάχιστον ένα), αν έχει κάτι στο σάκο του (μπίμπερ, τουλάχιστον ένα).
			} 
		}
		Με "*", "Επιστροφή"
		{
				Περί  "Δημιουργία του Κόσμου του Κάρελ", χ.σημεία*2/3, υ.σημεία*2/3, {
					Δείτε επίσης [Σχεδιασμός],  [Σελίδα Git]
									[Έλεγχος],
									[Αποθήκευση],
									[Ρομπότ],
									[Χειρισμός Προγράμματος]
									
					Ο κόσμος του Κάρελ, έχει σταθερές λεωφόρους και δρόμους και εμείς βάζουμε χωρίσματα και μπίμπερ. Τα μπίμπερ ο Κάρελ μπορεί να τα μαζέψει αλλά και να τα αφήσει, ανάλογα την άσκηση. Τα μπίμπερ μένουν στις διασταυρώσεις. Τα χωρίσματα βρίσκονται πάντα μεταξύ διασταυρώσεων.
					Το μέγεθος μπορεί να είναι από 5Χ5 μέχρι 20Χ20, και η περίμετρός του δεν έχει χωρίσματα. Ο Κάρελ δεν μπορεί να βγει από το κόσμο του, επειδή δεν υπάρχει άλλος χώρος, και εμφανίζεται στο ραντάρ του Εμπόδιο. Ο Κάρελ πάντα μετακινείται από διασταύρωση σε διασταύρωση, και ποτέ δεν μένει σε ενδιάμεσο χώρο, μεταξύ γειτωνικών διασταυρώσεων.
					Το ραντάρ του Κάρελ εντοπίζει εμπόδια μπροστά, δεξιά, αριστερά και πίσω. Επίσης εντοπίζει αν υπάρχουν μπίμπερ στη τρέχουσα διασταύρωση (αλλά όχι τον αριθμό τους). Επίσης γνωρίζει αν έχει στο σάκο του μπίμπερ, αλλά πάλι δεν ξέρει πόσα έχει.
					Στο πρόγραμμα δημιουργίας του κόσμου του Κάρελ, δεν υπάρχουν ατυχήματα για τον Κάρελ. Αν χρησιμοποιήσουμε την κίνηση εμπρος, και πέσουμε σε τοίχο, δεν θα συμβεί τίποτα, απλά δεν θα περάσει ο Κάρελ. Στο κανονικό πρόγραμμα η πρόσκρουση σε τοίχο σημαίνει σφάλμα και τερματίζει την εκτέλεσή του. Για λόγους σχεδιασμού ο Κάρελ μπορεί να περάσει μέσα από τοίχους χρησιμοποιώντας τα πλήκτρα με τα σημεία του ορίζοντα.
					}
		}
	Τέλος Επιλογής
}
Διαμέσου ΦόρτωσεΣυνάρτηση
Αδειασε
ΠΕΝΑ 14
Διαφυγή Όχι
Παράθυρο 12, 0     // αλλάξτε το ,0 με ,1 αν θέλετε να ανοίγει στο μόνιτρο 1
 // το ! στη Φόρμα μικραίνει κάπως το παράθυρο για τηλεοράσεις που κρύβουν
 //  κάποια Pixels της προβαλής της επιφάνειας εργασίας. (TV/Monitors)
Σημ 1:
 Φόρμα !88, 40 
Σημ 2: Φόρμα 64, 40
Φόρμα
Οθόνη #ff77dd,0
Κάρελ1=ΚάρελΣχέδιο(1)
Θέση κλίμαξ.χ/2, κλίμαξ.ψ/2
Διάφανο  Καρελ1, 5,15,κλιμαξ.χ/ εικόνα.χ(Κάρελ1)*80,, 1
Πένα , 240:Φόντο 15, 15:Πένα ,255 ' το κάνουμε υδατογράφημα!
Διπλά: Πλάγια
Τύπωσε Πάνω ~(15), $(6), "ΦΤΙΑΧΝΩ ΤΟ ΚΟΣΜΟ ΤΟΥ ΚΑΡΕΛ ΤΟΥ ΡΟΜΠΟΤ"
Πλάγια
Δρομέας 0,0
Για Αυτό {
	Στόχοι Νέοι
	Μ=0
	Πένα 4 {Στόχος Μ,"Κωδ=-1", 1, 1, ,,101, "❎"}

}
Κανονικά
// Χωρισμός οθόνης:  κόσμος | εντολές
// Κάτω "Πληροφορίες"
Δρομέας 0,2
Θέση !
θέσηΣ=θέση.Ψ
Χωρ=Κλίμαξ.χ*2/3
Δρομέας 0, Ύψος-5
Θέση !
ΘέσηΜ1=θέση.ψ
Οθόνη 5, Ύψος-3
Θέση !
ΘέσηΜ=θέση.ψ

Θέση 0, ΘέσηΣ
Πένα , 100
	Βάψε Χωρ, ΘέσηΜ-ΘέσηΣ, 15, 0
	Θέση Χωρ, ΘέσηΣ
	Πένα , 150
	Βάψε Κλίμαξ.χ-Χωρ, ΘέσηΜ-ΘέσηΣ, 7,#ffbbbb ,#ffbbbb
	Γενική Κωδ=0
Πένα , 255
Οθόνη, -3
αρπ=Πλάτος*2/3+1
αρπ1=1
Απαρ Οδηγίες {Δοκιμή=1}
Μ=0
Πλ=Πλάτος/3-2
Πλ1=Ακ((Πλάτος/3-3)/2)
// Υπολογισμος(2)  δίνει το ποσοστό 2 χαρακτήρων σε 9 χαρακτήρες πλάτος,
// Αλλά βάσει του μέτρου του ύψους!
// Επειδή το 1 ύψος δεν  έχει τα ίδια twips με το 1 πλάτος, έχουν διαφορετικά μέτρα!
// Και θέλουμε παρακάτω να βάλουμε πλαίσιο πίσω από την εικόνα όσο 3 μέτρα Ύψους
// Το Πλ1*χ.σημεια/Πλάτος είναι τα twips σε πλάτος ΠΛ1
// Το Χ*ψ.σημεία/Ύψος είναι τα τwips σε ύψος Χ
// το μέτρο του πλάτους είναι το χ.σημεια/Πλάτος
// το μέτρο του ύψους είναι το ψ.σημεία/Ύψος
Υπολογισμός=Λάμδα
	μαξ=ΠΛ1*χ.σημεια/Πλάτος,
	ΠΛ1
	(Χ=-1)->{αν Χ=-1 τότε =100: έξοδος
		// εδώ θέλουμε σε "μονάδες κατά ύψος", στο μέτρο του ύψους
		=Στρογγ((Χ*ψ.σημεία/Ύψος)/μαξ*100, 3)
		}
ΠΛ0=ΠΛ
Μ=0
Απαρίθμηση ΕιδοςΠλήκτρου {Μεγάλο=0, ΑριστΜισό, ΚεντρΜισό, ΔεξΜισό}
Έγγραφο Σημειώσεις$
Ποιός=Λίστα
Εκείνος=Λίστα
Δρομέας ,2
Κεφαλίδα(Μεγάλο, αρπ, ΓΡΑΜΜΗ, "Αλλαγή Στοιχείου")
Μνήμη=Λίστα:="ΚΑΘ":=(Μεγάλο, αρπ, ΓΡΑΜΜΗ+1, Μ+1, "ΚΑΘΑΡΟ", "Αφαιρούμε τοίχωμα")
Στόχος(1, !Μνήμη("ΚΑΘ"))

Προσθήκη Μνήμη,"ΕΜΠ":=(Μεγάλο, αρπ, ΓΡΑΜΜΗ+1, Μ+1, "ΕΜΠΟΔΙΟ", " βάζουμε όλα τα άκρα, αν υπάρχει αριστερά τοίχος μπαίνει αριστερό άκρο, αν υπάρχει πάνω τοίχος μπαίνει άνω άκρο")
// το !Μνήμη("ΕΜΠ") αφήνει ένα αντίγραφο των τιμών στο σωρό τιμών, δηλαδή
// θα περάσουν οι τιμές ως παράμετροι
// Το κάνουμε αυτό για να κρατάμε τις παραμέτρους σε επόμενες περιπτώσεις
// Επειδή ο Στόχος δεν μας επιστρέφει τα στοιχεία που του δίνουμε!

Στόχος(2, !Μνήμη("ΕΜΠ"))
Προσθήκη Μνήμη,"ΑΚΡ":=(Μεγάλο, αρπ, ΓΡΑΜΜΗ+1, Μ+1, "ΑΚΡΟ", "βγάζουμε άνω άκρο")
Στόχος(3, !Μνήμη("ΑΚΡ"))
Προσθήκη Μνήμη,"ΚΑΤΩ":=(Μεγάλο, αρπ, ΓΡΑΜΜΗ+1, Μ+1, "ΚΑΤΩ ΑΚΡΟ", "βγάζουμε κάτω άκρο")
Στόχος(4, !Μνήμη("ΚΑΤΩ"))
Προσθήκη Μνήμη,"ΔΕΞΙ":=(Μεγάλο, αρπ, ΓΡΑΜΜΗ+1, Μ+1, "ΔΕΞΙ ΑΚΡΟ", "βγάζουμε αριστερό άκρο")
Στόχος(5, !Μνήμη("ΔΕΞΙ"))
Προσθήκη Μνήμη,"ΚΑΤΙ":=(Μεγάλο, αρπ, ΓΡΑΜΜΗ+1, Μ+1, "ΜΠΙΜΠΕΡ +1", "βάζουμε ένα μπίμπερ, μπορούμε να βάλουμε όσα θέλουμε στην ίδια θέση")
Στόχος(6, !Μνήμη("ΚΑΤΙ"))
Προσθήκη Μνήμη,"ΚΑΤΙ--":=(Μεγάλο, αρπ, ΓΡΑΜΜΗ+1, Μ+1, "ΜΠΙΜΠΕΡ -1", "Αφαιρούμε ένα μπίμπερ, μέχρι να μην υπάρχουν άλλα, στη θέση!")
Στόχος(7, !Μνήμη("ΚΑΤΙ--"))
Προσθήκη Μνήμη, "Β":=(ΚεντρΜισό, αρπ,ΓΡΑΜΜΗ+2, Μ+1, "ΒΟΡΡΑΣ", "Κίνηση Πάνω")
Στόχος(100, !Μνήμη("Β"))
Προσθήκη Μνήμη, "Δ":=(ΑριστΜισό, αρπ, ΓΡΑΜΜΗ+2, Μ+1, "ΔΥΣΗ",  "Κίνηση Αριστερά")
Στόχος(101, !Μνήμη("Δ"))
Προσθήκη Μνήμη, "Α":=(ΔεξΜισό, αρπ, ΓΡΑΜΜΗ, Μ+1, "ΑΝΑΤΟΛΗ", "Κίνηση Δεξιά")
Στόχος(102, !Μνήμη("Α"))
Προσθήκη Μνήμη, "Ν":=(ΚεντρΜισό, αρπ, ΓΡΑΜΜΗ+2, Μ+1, "ΝΟΤΟΣ", "Κίνηση Κάτω")
Στόχος(103, !Μνήμη("Ν"))

Κεφαλίδα(Μεγάλο, αρπ, ΓΡΑΜΜΗ+2, "Τίτλος Κόσμου")
όνομαπίνακα$="ΚΟΣΜΟΣ1"
Τύπος.Αρχείου$="kworld"
όνομααρχείου$=κατ$+όνομαπίνακα$
Προσθήκη Μνήμη, "Τίτλος":=(Μεγάλο, αρπ, ΓΡΑΜΜΗ+1, Μ+1, όνομαπίνακα$, "Γράψε όνομα πίνακα")
Στόχος(200, !Μνήμη("Τίτλος"))
Κεφαλίδα(Μεγάλο, αρπ, ΓΡΑΜΜΗ+2, "Διαστάσεις Κόσμου Π x Y")
Κεφαλίδα(Μεγάλο, αρπ, ΓΡΑΜΜΗ+1, "Χ")
ΧΚ=5
ΨΚ=5
Σταθερη νκ$=" και θα πάρεις νέο Κόσμο, ή πάτα Esc ή άφησε το ίδιο νούμερο για να μείνει ως έχει"
Προσθήκη Μνήμη, "Χ":=(ΑριστΜισό, αρπ, ΓΡΑΜΜΗ, Μ+1, Γραφη$(ΧΚ, ""), "Δώσε τον αριθμό των λεωφόρων (κάθετες γραμμές)"+νκ$)
Στόχος(201, !Μνήμη("Χ"))
Προσθήκη Μνήμη, "Ψ":=(ΔεξΜισό, αρπ, ΓΡΑΜΜΗ, Μ+1, Γραφη$(ΨΚ, ""), "Δώσε τον αριθμό των δρόμων (οριζόντιες γραμμές)"+νκ$)
Στόχος(202, !Μνήμη("Ψ"))

ΚεφαλίδαΔεξιά(ΑριστΜισό, αρπ, ΓΡΑΜΜΗ+2, "Σάκος Κάρελ")
ΣΚ=0
Προσθήκη Μνήμη, "ΣΑΚΟΣ":=(ΔεξΜισό, αρπ, ΓΡΑΜΜΗ, Μ+1, "0", "Βάζουμε πόσα μπιμπερ (ΚΑΤΙ) θα υπάρχουν, στο ξεκίνημα, στον σάκο του Κάρελ")
Στόχος(203, !Μνήμη("ΣΑΚΟΣ"))
μ1$="Η θέση που θα ξεκινήσει, δεν μπορεί να είναι τυχαία!"
ΚεφαλίδαΔεξιά(ΑριστΜισό, αρπ, ΓΡΑΜΜΗ+1, "Αρχική Θέση Χ")

Κάρελ_εισΧ=1
Προσθήκη Μνήμη, "ΚΑΡΕΛ_Χ":=(ΔεξΜισό, αρπ, ΓΡΑΜΜΗ, Μ+1, "1", μ1$)
Στόχος(204, !Μνήμη("ΚΑΡΕΛ_Χ"))

ΚεφαλίδαΔεξιά(ΑριστΜισό, αρπ, ΓΡΑΜΜΗ+1, "Αρχική Θέση Υ")

Κάρελ_εισΥ=1
Προσθήκη Μνήμη, "ΚΑΡΕΛ_Υ":=(ΔεξΜισό, αρπ, ΓΡΑΜΜΗ, Μ+1, "1", μ1$)
Στόχος(205, !Μνήμη("ΚΑΡΕΛ_Υ"))

ΚεφαλίδαΔεξιά(ΑριστΜισό, αρπ, ΓΡΑΜΜΗ+1, "Προσανατολισμός")

Κάρελ_Βλέπει=2
Προσθήκη Μνήμη, "ΒΛΕΠΕΙ":=(ΔεξΜισό, αρπ, ΓΡΑΜΜΗ, Μ+1, Κεφ$(Ζήτα(,,Κάρελ_Βλέπει, 0)#Τιμή$(0)), "Επιλογή Από Λίστα")
Στόχος(206, !Μνήμη("ΒΛΕΠΕΙ"))
ΠρΧ=θέση
ΠρΥ=Γραμμή

ΚεφαλίδαΔεξιά(ΑριστΜισό, αρπ, ΓΡΑΜΜΗ+1, "Χρωματισμός")

Κάρελ_χρώμα=Χρωμα(11)  ' μετατροπή τα βασικά σε κανονικά ' Χρώμα(255, 255,255) δίνει άσπρο
Προσθήκη Μνήμη, "ΧΡΩΜΑ":=(ΔεξΜισό, αρπ, ΓΡΑΜΜΗ, Μ+1, "Ρομπότ    ", "Επιλογή Χρώματος Από Χρωματολόγιο")
Σταθερή ΎψοςΣτόχου2=2
// δίνουμε δυο επιπλέον στοιχεία. Κανονικά μια ρουτίνα διαβάζει τις παραμέτρους που έχουμε ορίσει
// όμως ο σωρός τιμών είναι ίδιος με αυτόν του τμήματος
// οπότε έχουμε βάλει μια Διάβασε ?  που διαβάζει αν υπάρχουν τιμές αλλιώς βάζει αρχικές μόνη της αν είναι νεες,
// αλλιώς αφήνει τις τιμές που έχουν
Στόχος(207, !Μνήμη("ΧΡΩΜΑ"), ΎψοςΣτόχου2, 106)

// Το σχέδιο είναι σχεδιασμένο σε 512Χ512 pixels
// Σε 512*15Χ512*15 αν το πλάτος.σημείου=15  (όπου οι μονάδες είναι dpi, dots per inch, στην οθόνη έχουμε λογική ίντσα)
	// Λογική ίντσα σημαίνει ότι υπάρχει ένας συντελεστής Φ όπου αλλάζει κατά Φ τη πραγματική ίντσα,
	// δηλαδή Φ*πραγματική ίντσα=Λογική ίντσα. Το Φ δεν το ξέρει ο υπολογιστής.
	// Πχ προβάλουμε σε προτζέκτορα, και πάμε την οθόνη όσο θέλουμε από τον προτζέκτορα και αλλάζουμε άμεσα το Φ.
	// Οπότε δεν υπάρχει περίπτωση να το γνωρίζει ο υπολογιστής!
	// Στον εκτυπωτή όμως το Φ είναι πάντα 1
// Επειδή λοιπόν μειώνουμε το μέγεθος της εικόνας (είναι σχέδιο, emf τύπος), αλλάζει το πάχος γραμμής με συνέπεια:
// κατά την ραστεροποίηση (το σχέδιο να γίνει εικονοστοιχεία), χάνεται πληροφορία και δεν εμφανίζονται οι γραμμές αν δεν πέσουν
// καλά στο εικονοστοιχείο. Οπότε δίνουμε μεγαλύτερο πάχος γραμμής από την αρχή ώστε στο συρίκνωση να υπάρχει αρκετό πάχος
// για να φανούν οι γραμμές
Σταθερή ΠάχοςΓραμμής=38
Κάρελ=ΚάρελΣχέδιο(Κάρελ_χρώμα, ΠάχοςΓραμμής)
// χρωμα 15 λέμε ότι θα χρησιμοποιήσουμε το επιπλέον επίπεδο που αυξάνει βάσει ποσοστού(ών) (ΤΙΜΗ ή και ΒΑΣΗ)
// εξ ορισμού αυτό το επίπεδο έχει ΚΑΘΕΤΗ 0  (το ΚΑΘΕΤΗ 1 το κάνει να μεγαλώνει από κάτω)
// Το μέγεθος μπορεί να είναι -100... 0 ...100
// Αρνητικό νούμερο σημαίνει ότι η εικόνα μπαίνει μπροστά από το αυτό το επίπεδο
// 0 σημαίνει ότι θα πάρει όλο το στόχο (και πάει πίσω όπως στα θετικά νούμερα )
Ποσοστό=Υπολογισμός(ΎψοςΣτόχου2)
Αλλαγή Μ, ΕΙΚΟΝΑ Καρελ, ΜΕΓΕΘΟΣ -80, ΧΡΩΜΑ #AAAAAA, ΤΙΜΗ Ποσοστό

Κεφαλίδα(Μεγάλο, αρπ, ΓΡΑΜΜΗ+3, "Σκοπός του Κάρελ")
Σκοπός=1
Προσθήκη Μνήμη, "ΣΚΟΠΟΣ":=(Μεγάλο, αρπ, ΓΡΑΜΜΗ+1, Μ+1, Κεφ$(Ζήτα(,,Σκοπός)#Τιμή$(0)), "Επιλογή Από Λίστα")
Στόχος(250, !Μνήμη("ΣΚΟΠΟΣ"))
ΣκΧ=θέση
ΣκΥ=Γραμμή

Κεφαλίδα(Μεγάλο, αρπ, ΓΡΑΜΜΗ+2, "Λειτουργία Προγράμματος")

Προσθήκη Μνήμη, "ΑΡΧΕΙΟ":=(ΑριστΜισό, αρπ, ΓΡΑΜΜΗ+1, Μ+1, "ΕΙΣΑΓΩΓΗ",  "Καθαρίζει (ρωτάει)  και Εισάγει από αρχείο (ρωτάει)")
Στόχος(500, !Μνήμη("ΑΡΧΕΙΟ"))

Προσθήκη Μνήμη, "ΑΠΟΘΗΚΕΥΣΗ":=(ΔεξΜισό, αρπ, ΓΡΑΜΜΗ, Μ+1, "ΕΞΑΓΩΓΗ", "Αποθήκευση (ρωτάει) και Έξοδος (ρωτάει)")
Στόχος(501, !Μνήμη("ΑΠΟΘΗΚΕΥΣΗ"))

Προσθήκη Μνήμη, "ΣΗΜ":=(ΑριστΜισό, αρπ, ΓΡΑΜΜΗ+1, Μ+1, "ΣΗΜΕΙΩΣΕΙΣ",  "Σημειώσεις που θέλετε να βγαίνουν στο πρόγραμμα παρουσίασης (οπωσδήποτε όταν ο σκοπός είναι το ΑΛΛΟ), με Esc επιστρέφουμε")
Στόχος(502, !Μνήμη("ΣΗΜ"))

Προσθήκη Μνήμη, "ΒΟΗΘΕΙΑ":=(ΔεξΜισό, αρπ, ΓΡΑΜΜΗ, Μ+1, "ΒΟΗΘΕΙΑ", "Περί Λειτουργίας του Προγράμματος")
Στόχος(503, !Μνήμη("ΒΟΗΘΕΙΑ"))

Προσθήκη Μνήμη, "ΕΛΕΓΧΟΣ":=(ΑριστΜισό, αρπ1, ΓΡΑΜΜΗ, Μ+1, "ΕΛΕΓΧΟΣ", {Δοκιμή το Κόσμου σαν παιχνίδι. Οδηγίες: Αριστερό Πλήκτρο Ποντικιού: ο Κάρελ πάει Μπροστά,  Δεξί Πλήκτρο Ποντικιού: ο Κάρελ στρίβει Αριστερά, Πλήκτρο Α: Ο Κάρελ παίρνει αν υπάρχει κάτι, Πλήκτρο Χ: Ο Κάρελ αφήνει αν έχει κάτι στο σάκο,  Με Πλήκτρο Esc: Έξοδος})
Στόχος(504, !Μνήμη("ΕΛΕΓΧΟΣ"))

Προσθήκη Μνήμη, "ΕΜΠΡΟΣ":=(ΑριστΜισό, αρπ1+1+ΠΛ1, ΓΡΑΜΜΗ, Μ, "ΕΜΠΡΟΣ", "Κίνηση του Κάρελ Μπροστά!")
Στόχος(505, !Μνήμη("ΕΜΠΡΟΣ"))

Προσθήκη Μνήμη, "ΑΡΙΣΤΕΡΑ":=(ΑριστΜισό, αρπ1+2+2*ΠΛ1, ΓΡΑΜΜΗ, Μ, "ΑΡΙΣΤΕΡΑ", "Στροφή του Κάρελ Αριστερά!")
Στόχος(506, !Μνήμη("ΑΡΙΣΤΕΡΑ"))

Προσθήκη Μνήμη, "ΗΧΟΣ":=(ΑριστΜισό, αρπ1+3+3*ΠΛ1, ΓΡΑΜΜΗ, Μ, "ΗΧΟΣ", "Ο Κάρελ κάνει ΜΠΙΠ όταν παίρνει η αφήνει ΜΠΙΜΠΕΡ!")
Στόχος(507, !Μνήμη("ΗΧΟΣ"))

ΘέσηΣτηΛιστα = λάμδα (μ ως λίστα) ->{
	Αν ειναρ τότε τι$=γραφη$(αριθμός,"") αλλιώς διάβασε τι$
	// εφόσον δεν έχουν γίνει διαγραφές η λίστα δίνει ίδιους αριθμούς
	Αν υπάρχει(μ, τι$) τότε =εκφρ(μ!) αλλιώς =-1  ' πάει στο τελευταίο στοιχείο
}
////////////////////////////////////
// για το χώρο πίσω από το Κόσμο!
Θέση 0, ΘέσηΣ
Αντίγραψε Χωρ, ΘέσηΜ-ΘέσηΣ στο ΠίσωΧώρος$
'ΝέοςΚόσμος(ΧΚ, ΨΚ)
ΝέοςΚόσμοςΑπόΛίστα(Λίστα1$)
'ΔείξεΚόσμο()


///////////////////////
Οθόνη
Νήμα {
	Αν πατημένο(2) τότε πληκτρολόγιο δώσε 27,0,0,0
} Ως Ν1 Κάθε 20
Νήμα Ν1 Κράτα
ΜεΉχο=Ψευδές
Υπάρχει.Νέο=Ψευδές
Συνθήκες()
Αυτόματο=Ψευδές
Αναμ=200
Κάθε 1000/10 {
Αν Κωδ>0 Τότε
	(Χ,Υ)=(Δείκτης.χ, Δεικτης.ψ)
	Αλλαγή Ποιος(Κωδ), ΦΟΝΤΟ #AAAAAA,  ΠΕΝΑ 0
	// το ! λέει ότι δεν δίνουμε κλειδί αλλά θέση - εδώ είναι από 0 (αρνητικά νούμερα είναι από το τέλος)
	Αυτόματο= (100,101,102,103, 505)#Έχει(κωδ)
	Οθόνη : Αναφορά Μνήμη(ΘέσηΣτηΛίστα(Ποιός, Κωδ)!)#Τιμή$(5)
	Αν κωδ=507 Τότε  Αναφορά "Κατάσταση: "+Αν$(ΜεΉχο=Αληθής->"Ναι", "Όχι") 
	ενώ δείκτης<>0 και όχι Αυτόματο
		Αναμονή  10
	Τέλος Ενώ
	Αν Χ<>Δείκτης.χ και Υ<>δείκτης.ψ τότε
		// τίποτα
	Αλλιώς.Αν κωδ>199 τότε
		Αν κωδ>499 τότε
			Αν κωδ=500 τότε
				ΕισαγωγήΚόσμου()	
			Αλλιώς.Αν κωδ=501 τότε
				ΕξαγωγήΚόσμου()
			Αλλιώς.Αν κωδ=502 τότε
				Ανανέωση 5000
				ΚάρελΡομπότ=>ΣβήσεΜε
				Κράτησε
				Θόλωσε()
				Δρομέας 0, 2
				Ανανέωση 20
				Εισαγωγή ! Σημειώσεις$, αρπ-1,ύψος-6, "Σημειώσεις", μήκος(Σημειώσεις$)+1
				Ανανέωση 5000
				Αφησε
				ΚάρελΡομπότ=>ΣχεδίασεΠρώτηΦορά
				Ανανέωση 20
			Αλλιώς.Αν κωδ=503 Τότε
				Περί Δείξε "*"
			Αλλιώς.Αν κωδ=504 Τότε
				Αλλαγή Ποιος(Κωδ),  ΦΟΝΤΟ 1,  ΠΕΝΑ #ddffcc
				κωδ<=0
				Παιχνίδι()
			Αλλιώς.Αν κωδ=505 Τότε
				Αυτόματο=ψευδές
				Αναμονή 200
				Αλλαγή Ποιος(Κωδ),  ΦΟΝΤΟ 1,  ΠΕΝΑ #ddffcc
				κωδ<=0
				Αναμ=200
				Ενώ Δεικτης
					Αν Κόσμος.ΚοίταΜπροστά(ΚάρελΡομπότ, Αληθές, ΜεΉχο) τότε
						ΚάρελΡομπότ=>ΠηγαινεΕμπρός &παλιόΧ, &παλιόΥ
						Συνθήκες() 
						Ανανέωση 10
						Αναμονή Αναμ : Αναμ=20
					Αλλιώς
						Έξοδος
					Τέλος Αν
				Τέλος Ενώ
			Αλλιώς.Αν κωδ=506 Τότε
				Αλλαγή Ποιος(Κωδ),  ΦΟΝΤΟ 1,  ΠΕΝΑ #ddffcc
				κωδ<=0
				ΚάρελΡομπότ=>ΚάνεΑριστερά
			Αλλιώς.Αν κωδ=507 Τότε
				ΜεΉχο~
				Αλλαγή Ποιος(Κωδ),  ΦΟΝΤΟ 1,  ΠΕΝΑ (#ddffcc, 11)#τιμή(Απολ(ΜεΉχο))
				ΚάρελΡομπότ=>ΣβήσεΜε
				Αλλαγή Ποιος(Κωδ),  Πλαισιο 15+ΜεΉχο*4
				ΚάρελΡομπότ=>ΣχεδίασεΠρώτηΦορά
				κωδ<=0
			Τέλος αν
		Αλλιώς.Αν κωδ=200 Τότε
			ΕισαγωγήΟνόματος(!Μνήμη("Τίτλος"),  &όνομαπίνακα$)
		Αλλιώς.Αν κωδ=201 Τότε
			παλιόΧΚ=ΧΚ
			ΕισαγωγήΑριθμού(!Μνήμη("Χ"),  &ΧΚ, 5, 30)
			ΕμφάνισηΑριθμού(!Μνήμη("ΚΑΡΕΛ_Χ"),  &Κάρελ_εισΧ, 1, ΧΚ)
			Αν παλιόΧΚ=ΧΚ Αλλιώς
				ΝέοςΚόσμος(ΧΚ, ΨΚ)
				ΔείξεΚόσμο()
			Τέλος Αν
		Αλλιώς.Αν κωδ=202 Τότε
			παλιόΨΚ=ΨΚ
			ΕισαγωγήΑριθμού(!Μνήμη("Ψ"),  &ΨΚ, 5, 20)
			ΕμφάνισηΑριθμού(!Μνήμη("ΚΑΡΕΛ_Υ"),  &Κάρελ_εισΥ, 1, ΨΚ)
			Αν παλιόΨΚ=ΨΚ Αλλιώς
				ΝέοςΚόσμος(ΧΚ, ΨΚ)
				ΔείξεΚόσμο()
			Τέλος Αν
		Αλλιώς.Αν κωδ=203 Τότε
			ΕισαγωγήΑριθμού(!Μνήμη("ΣΑΚΟΣ"),  &ΣΚ, 0, 1000)
		Αλλιώς.Αν κωδ=204 Τότε
			ΕισαγωγήΑριθμού(!Μνήμη("ΚΑΡΕΛ_Χ"),  &Κάρελ_εισΧ, 1, ΧΚ)
		Αλλιώς.Αν κωδ=205 Τότε
			ΕισαγωγήΑριθμού(!Μνήμη("ΚΑΡΕΛ_Υ"),  &Κάρελ_εισΥ, 1, ΨΚ)
		Αλλιώς.Αν κωδ=206 Τότε
			Δρομέας ΠρΧ, ΠρΥ+1
			Κάρελ_Βλέπει=Ζήτα(Ποιός(206), Κάρελ_Βλέπει,,0)  ' αφήνουμε την τρίτη επιλογή
			Για ΚάρελΡομπότ {
				.Βλέπει=Κάρελ_Βλέπει
				.ΣχεδίασεΞανά
			}
		Αλλιώς.Αν κωδ=207 Τότε
			Σωρός Νέος {
				Επίλεξε.Χρώμα Κάρελ_χρώμα
				Αν όχι κενό τότε διάβασε Κάρελ_χρώμα
				Κάρελ=ΚάρελΣχέδιο(Κάρελ_χρώμα, ΠάχοςΓραμμής)
				Αλλαγή Ποιός(207), ΕΙΚΟΝΑ Καρελ, ΦΟΝΤΟ 1,  ΠΕΝΑ 15
				Κάρελ=ΚάρελΣχέδιο(Κάρελ_χρώμα, Περίγραμμα)
				ΚάρελΔυτικά=ΚάρελΣχέδιο(Κάρελ_χρώμα, Περίγραμμα, 1)
				ΚάρελΡόμποτ=>ΣχεδίασεΞανά
			}
		Αλλιώς.Αν κωδ=250 Τότε
			Δρομέας ΣκΧ, ΣκΥ+1
			Σκοπός=Ζήτα(Ποιός(250), Σκοπός)
		Τέλος Αν
	Αλλιώς
		Αυτόματο=Ψευδές
		Αν Κωδ>=1 και Κωδ<=5 τότε
			Υπάρχει.Νέο=Αληθές
			Αν ΠαλιόΧ<ΧΠ Και ΠαλιόΥ<ΥΠ Τότε
				Ανανέωση 5000
				ΚάρελΡομπότ=>ΣβήσεΜε
				Επίλεξε με Κωδ-1
				Με 1
					Κόσμος.ΒάλεΕμπόδιο παλιόΧ, ΠαλιόΥ
				Με 2
					Κόσμος.ΚΑΘΕΤΟΑΚΡΟ παλιόΧ, ΠαλιόΥ
				Με 3
					Κόσμος.ΒάλεΑΚΡΟ παλιόΧ, ΠαλιόΥ
				Με 4
					Κόσμος.ΒαλεΔΕΞΙΑΚΡΟ παλιόΧ, ΠαλιόΥ	
				Αλλιώς Με
					Κόσμος.ΚαθάρισεΕμπόδιο παλιόΧ, ΠαλιόΥ
				Τέλος Επιλογής
				Προηγούμενη=Λίστα
				Θέση 0, ΘέσηΣ
				Εικόνα ΠίσωΧώρος$
				Θέση (Χωρ-ΚΑ*ΧΠ) δια 2-ΚΣ, ((ΘέσηΜ1-ΘέσηΣ)-ΚΑ*(ΥΠ)) δια 2+ΘέσηΣ+ΚΣ
				Κόσμος.Εμφάνισε
				ΚάρελΡομπότ=>ΣχεδίασεΠρώτηΦορά
				Ανανέωση 20
			Τέλος Αν
		Αλλιώς.Αν Κωδ=6 Τότε
			Ανανέωση 10000
			Αν Κόσμος.Πόσα(παλιόΧ, παλιόΥ)=0 τότε
				ΒάλεΚάτι(παλιόΧ, παλιόΥ, ΚάρελΡομπότ=>Βλέπει)
			Τέλος Αν
			Κόσμος.ΒάλεΚάτι παλιόΧ, παλιόΥ
			Υπάρχει.Νέο=Αληθές
			Ανανέωση 20
			Αναμονή 200
		Αλλιώς.Αν Κωδ=7 Τότε
			Ανανέωση 10000
			Αν Κόσμος.Πόσα(παλιόΧ, παλιόΥ)=1 τότε 
				ΒάλεΚενό(παλιόΧ, παλιόΥ, ΚάρελΡομπότ=>Βλέπει)			
			Τέλος Αν
			Κόσμος.ΠάρεΚάτι παλιόΧ, παλιόΥ
			Υπάρχει.Νέο=Αληθές
			Ανανέωση 20
			Αναμονή 200
		Αλλιώς
			Επανάλαβε 
				Αν Κωδ=102 και ΠαλιοΧ<ΧΠ Τότε
					Για ΚάρελΡομπότ {
						.Βλέπει=ΑΝΑΤΟΛΙΚΑ
						.ΘέσηΧ++
						.ΠηγαινεΕμπρός &παλιόΧ, &παλιόΥ
					}	
					Αναμονή 1					
					Αυτόματο=Δείκτης<>0
				Αλλιώς.Αν Κωδ=101 και ΠαλιοΧ>1 Τότε
					Για ΚάρελΡομπότ {
						.Βλέπει=ΔΥΤΙΚΑ
						.ΘέσηΧ--
						.ΠηγαινεΕμπρός &παλιόΧ, &παλιόΥ
					}
					Αναμονή 1
					Αυτόματο=Δείκτης<>0
				Αλλιώς.Αν Κωδ=100 και ΠαλιοΥ>1 Τότε
					Για ΚάρελΡομπότ {
						.Βλέπει=ΒΟΡΕΙΑ
						.ΘέσηΥ--
						.ΠηγαινεΕμπρός &παλιόΧ, &παλιόΥ
					}
					Αναμονή 1
					Αυτόματο=Δείκτης<>0
				Αλλιώς.Αν Κωδ=103 και ΠαλιοΥ<ΥΠ Τότε
					Για ΚάρελΡομπότ {
						.Βλέπει=ΝΟΤΙΑ
						.ΘέσηΥ++
						.ΠηγαινεΕμπρός &παλιόΧ, &παλιόΥ
					}
					Αναμονή 1
					Αυτόματο=Δείκτης<>0
				Αλλιώς
					Αυτόματο=Ψευδές
				Τέλος Αν
				Αν Αυτόματο Τότε Συνθήκες()
			Όσο Αυτόματο
		Τέλος Αν
	Τέλος Αν
	Αν Κωδ>0 Τότε Αλλαγή Ποιος(Κωδ),  ΦΟΝΤΟ 1,  ΠΕΝΑ #ddffcc
	Συνθήκες()
	Αν Όχι Αυτόματο τότε Κωδ<=0: Ανανέωση
Αλλιώς.Αν κωδ=-1 τότε
	Αν Υπάρχει.Νέο Τότε ΕξαγωγήΚόσμου()
	Αν Υπάρχει.Νέο Τότε
		Αν Ρώτα("Θές σίγουρα να κλείσεις το πρόγραμμα", τιτλ$, "Ναι", "*Όχι")=1 Τότε Έξοδος
	Αλλιώς
		έξοδος
	Τέλος Αν
Τέλος Αν
Σάρωσε 0.1
Αν Πατημένο(49) τότε έξοδος
}
Κύλιση Χώρισμα 0
Περί ! ""
Νήματα Σβήσε
Στόχοι Νέοι
Τέλος
ΦόρτωσεΣυνάρτηση:
// Οι ορισμοί κανονικής συνάρτησης πάνε στην αρχή της εκτέλεσης
// εδώ μεταθέσαμε το κώδικα προς το τέλος, αλλά σαν ροή παραμένει
// στην αρχή της εκτέλεσης με χρήση της Διαμέσου ΦόρτωσεΣυνάρτηση
// Δείτε μετά τη συνάρτηση την εντολή Επιστροφή
// Αυτή είναι μια απλή ρουτίνα που δεν διαγράφει ό,τι δημιουργεί,
// σε αντίθεση με την ρουτίνα/τέλος Ρουτίνας και το συνάρτηση/τέλος συνάρτησης
// Επίσης μια κανονική συνάρτηση έχει δικό της όνομα χώρου!
// Οπότε εδώ δεν ορίζουμε τοπικές!
Γενική Απαρίθμηση Προσανατολισμός {ΒΟΡΕΙΑ, ΑΝΑΤΟΛΙΚΑ, ΝΟΤΙΑ, ΔΥΤΙΚΑ}
Γενική Απαρίθμηση Πρόσβαση {ΕΚΤΟΣ_ΠΙΝΑΚΑ=-1, ΚΑΘΑΡΟ, ΕΜΠΟΔΙΟ, ΚΑΤΩΑΚΡΟ, ΑΚΡΟ, ΔΕΞΙΑΚΡΟ}
Γενική Απαρίθμηση Τσαντα {ΔΕΝ_ΥΠΑΡΧΕΙ_ΚΑΤΙ=0, ΥΠΑΡΧΕΙ_ΚΑΤΙ=-1}

Συνάρτηση ΚάρελΣχέδιο(χρ=1, παχ ως μακρύς=11, φλιπ=0){
	Αν παχ<1 τότε παχ=1
	Αν φλιπ Τότε
		μχ1=1
		μχ=512
		Οχ=0
	Αλλιώς
		Οχ=-πλάτος.σημείου*20
		μχ1=-1
		μχ=0
	Τέλος Αν
	πλ=-πλάτος.σημείου*μχ1
	Σχέδιο  πλάτος.σημείου*512, ύψος.σημείου*512 {
		Πένα 0 {Πάχος 1 {
				Θέση Οχ+πλάτος.σημείου*(μχ-263*μχ1),ύψος.σημείου*(37+50+312)
				Πολύγωνο 0, 0, ύψος.σημείου*70, πλ*106, 0, 0, -ύψος.σημείου*48, -πλ*52, 0, 0, -ύψος.σημείου*22 , -πλ*54, 0
		}}
		Πένα 0 {Πάχος 1 {
				Θέση Οχ+πλάτος.σημείου*(μχ-147*μχ1),ύψος.σημείου*(263)
				Πολύγωνο 0, -πλ*82, 0,  0, ύψος.σημείου*96, πλ*43, 0,0, -ύψος.σημείου*53, πλ*39, 0, 0, -ύψος.σημείου*43
		}}
		Πένα 0 {Πάχος παχ {
			Θέση Οχ+πλάτος.σημείου*(μχ-147*μχ1),ύψος.σημείου*(37)
				Χρώμα {
				Πολύγωνο 11, 0 , ύψος.σημείου*312, πλ*50, ύψος.σημείου*50, πλ*220, 0, 0, -ύψος.σημείου*294,  -πλ*68, -ύψος.σημείου*68,  -πλ*202, 0		
				Θέση Οχ+πλάτος.σημείου*(μχ-208*μχ1),ύψος.σημείου*(85)
				Πολύγωνο 5, πλ*130, 0, 0, ύψος.σημείου*180, -πλ*130, 0, 0 , -ύψος.σημείου*180
				};
			Θέση Οχ+πλάτος.σημείου*(μχ-147*μχ1),ύψος.σημείου*37
			Χρώμα {
				Πολύγωνο χρ, 0 , ύψος.σημείου*312, πλ*50, ύψος.σημείου*50, πλ*220, 0, 0, -ύψος.σημείου*294,  -πλ*68, -ύψος.σημείου*68,  -πλ*202, 0
				Θέση Οχ+πλάτος.σημείου*(μχ-208*μχ1),ύψος.σημείου*(85)
				Πολύγωνο 5, πλ*130, 0, 0, ύψος.σημείου*180, -πλ*130, 0, 0 , -ύψος.σημείου*180
			}
			Θέση Οχ+πλάτος.σημείου*(μχ-268*μχ1),ύψος.σημείου*334
			Χάραξε πλ*70
		}}
	} ως Αλφα
	=Αλφα
}
Συνάρτηση Ζήτα(Κωδ=0, ΑρχικήΕπιλογή ως ακέραιος=1, ΑυτόΘέλω ως ακέραιος=0, ποιες_επιλογές=1) {
	// ασύγχρονη λειτουργία του μενού επιλογών στην κονσόλα
	Γενική Απάντηση=0
	Τοπική οκ
	Ανανέωση 20
	Επιλογή
	Επιλογή Βάψε 14,1,7
	Αν ποιες_επιλογές=1 Τότε
		Επιλογή  + "Ψάχνει ένα Μπίμπερ", "Μαζεύει όλα τα Μπίμπερ", "Βάζει Μπίμπερ σε θέσεις", "Πάει στην Περίμετρο", "Άλλο"
	Αλλιώς
		Επιλογή  + "Βορράς", "Ανατολή", "Νότος", "Δύση"
	Τέλος Αν
	ΑυτόΘέλω=Μικρό.Σειράς(Απολ(ΑυτόΘέλω), Επιλογές)
	Αν ΑυτόΘέλω>0 Τότε =(Επιλογή$(ΑυτόΘέλω),): Εξοδος  ' εδώ επιστρέφει πίνακα
	ΑρχικήΕπιλογή=Μικρό.Σειράς(Απολ(ΑρχικήΕπιλογή), Επιλογές)	
	Επιλογή @ "Απάντηση=Επιλογή" !
	Επιλογή Δείξε ΑρχικήΕπιλογή
	ΠαλιάΕπιλογή=-1
	Ενώ Απάντηση=0
		Αν πατημένο(2) ή πατημένο(27) ή Απάντηση>0 τότε έξοδος
		Αν επιλογή>0 και ΠαλιάΕπιλογή<>Επιλογή τότε
		ΠαλιάΕπιλογή=Επιλογή
		Αν Κωδ>0 Τότε Αλλαγή Κωδ, ΦΡΑΣΗ Κεφ$(Επιλογή$(Επιλογή))
		Αν ποιες_επιλογές=1 Τότε
			τ$=("Δίνουμε τις αρχικές θέσεις", "Δίνουμε τις αρχικές θέσεις", "Δίνουμε τις τελικές θέσεις", "Σημαίνει έξοδο από Λαβύρινθο", "Γίνεται έλεγχος από τον επόπτη")#Τιμή$(Επιλογή-1)
		Αλλιώς
			ΚάρελΡομπότ=>Σχεδίασε Επιλογή
			τ$="Το ρομπότ Κάρελ κοιτάει προς "+("το Βορρά","την Ανατολή", "το Νότο", "τη Δύση")#Τιμή$(Επιλογή-1)
		Τέλος Αν
		Οθόνη
		Αναφορά τ$
		τέλος αν
		Ανανέωση 20
		Αναμονή 100
	Τέλος Ενώ
	' εδώ επιστρέφει αριθμό
	Απάντηση<=Αν(Απάντηση=0 -> ΑρχικήΕπιλογή, Απάντηση)
	Αν Κωδ>0 Τότε Αλλαγή Κωδ, ΦΡΑΣΗ Κεφ$(Επιλογή$(Απάντηση))
	=Απάντηση
	Επιλογή	 // Κλείνει το μενού
}
Κλάση ΚΟΣΜΟΣ {
	γεγονότα "Αρχή", "ΑλλαγήΓραμμής", "ΔεξιάΚενό", "ΔεξιάΚάτι", "ΔεξιάΕμπόδιο"
Ιδιωτικό:
	Πίνακες Κ(), Μ()
	μεγΧ=0, μεγΥ=0
Δημόσιο:
	Τμήμα ΚαθάρισεΕμπόδιο (Χ ως ακέραιος, Υ ως ακέραιος) {
		Αν Χ<1 Η Χ>.μεγΧ Η Υ<1 Η Υ>.μεγΥ Τότε Έξοδος
		.Κ(Χ,Υ)=ΚΑΘΑΡΟ
	}
	Τμήμα ΒάλεΕμπόδιο (Χ ως ακέραιος, Υ ως ακέραιος) {
		Αν Χ<1 Η Χ>.μεγΧ Η Υ<1 Η Υ>.μεγΥ Τότε Έξοδος
		.Κ(Χ,Υ)=ΕΜΠΟΔΙΟ
	}
	Τμήμα ΒαλεΔΕΞΙΑΚΡΟ (Χ ως ακέραιος, Υ ως ακέραιος) {
		Αν Χ<1 Η Χ>.μεγΧ Η Υ<1 Η Υ>.μεγΥ Τότε Έξοδος
		.Κ(Χ,Υ)=ΔΕΞΙΑΚΡΟ
	}
	Τμήμα ΚΑΘΕΤΟΑΚΡΟ (Χ ως ακέραιος, Υ ως ακέραιος) {
		Αν Χ<1 Η Χ>.μεγΧ Η Υ<1 Η Υ>.μεγΥ Τότε Έξοδος
		.Κ(Χ,Υ)=ΚΑΤΩΑΚΡΟ
	}
	Τμήμα ΒάλεΑΚΡΟ (Χ ως ακέραιος, Υ ως ακέραιος) {
		Αν Χ<1 Η Χ>.μεγΧ Η Υ<1 Η Υ>.μεγΥ Τότε Έξοδος
		.Κ(Χ,Υ)=ΑΚΡΟ
	}
	Τμήμα ΒάλεΚάτι (Χ ως ακέραιος, Υ ως ακέραιος) {
		Αν Χ<1 Η Χ>.μεγΧ Η Υ<1 Η Υ>.μεγΥ Τότε Έξοδος
		.Μ(Χ,Υ)++
	}
	Τμήμα ΠάρεΚάτι (Χ ως ακέραιος, Υ ως ακέραιος) {
		Αν Χ<1 Η Χ>.μεγΧ Η Υ<1 Η Υ>.μεγΥ Τότε Έξοδος
		Αν .Μ(Χ,Υ)>0 τότε .Μ(Χ,Υ)--
	}
	Τμήμα ΒάλεΚενό (Χ ως ακέραιος, Υ ως ακέραιος){
		Αν Χ<1 Η Χ>.μεγΧ Η Υ<1 Η Υ>.μεγΥ Τότε Έξοδος
		.Μ(Χ,Υ)=0
	}
	Συνάρτηση ΈχειΚατι(Χ ως ακέραιος, Υ ως ακέραιος) {
		Αν Χ<1 ή Χ>.μεγΧ ή Υ<1 ή Υ>.μεγΥ Τότε Εξοδος
		=.Μ(Χ, Υ)>0
	}
	Συνάρτηση Πόσα(Χ ως ακέραιος, Υ ως ακέραιος) {
		Αν Χ<1 Η Χ>.μεγΧ Η Υ<1 Η Υ>.μεγΥ Τότε Έξοδος
		=.Μ(Χ,Υ)
	}
	Συνάρτηση Βόρεια(&Χ ως ακέραιος, &Υ ως ακέραιος, χε=ψευδής) {
		ΑΝ Υ=1 Τότε
		Αλλιώς.Αν Χ=1  ή Χ=.ΜεγΧ  Τότε
			Υ-- : 	=Αληθής
		Αλλιώς.ΑΝ .Κ(Χ,Υ-1)=ΔΕΞΙΑΚΡΟ Η .Κ(Χ-1,Υ-1)=ΚΑΘΑΡΟ Η .Κ(Χ,Υ-1)=ΚΑΘΑΡΟ Τότε
			Υ-- : 	=Αληθής
		Αλλιώς.Αν .Κ(Χ,Υ-1)=ΑΚΡΟ ΤΌΤΕ
			Υ-- : 	=Αληθής
		Τελος Αν
		Αν χε τότε =Αληθής
	}
	Συνάρτηση Ανατολικά(&Χ ως ακέραιος, &Υ ως ακέραιος, χε=ψευδής) {
		Αν Χ=.μεγΧ Τότε
		Αλλιώς.Αν Υ=1  ή Υ=.ΜεγΥ Τότε
			Χ++:=Αληθής
		Αλλιώς.Αν (.Κ(Χ,Υ)<>ΕΜΠΟΔΙΟ  ΚΑΙ .Κ(Χ,Υ)<>ΔΕΞΙΑΚΡΟ) Η  .Κ(Χ,Υ-1)=ΚΑΘΑΡΟ Τότε
				Χ++:=Αληθής
		Τελος Αν
		Αν χε τότε =Αληθής
	}
	Συνάρτηση Νότια(&Χ ως ακέραιος, &Υ ως ακέραιος, χε=ψευδής){
		Αν Υ=.μεγΥ Τότε
		Αλλιώς.Αν Χ=1  ή Χ=.ΜεγΧ  Τότε
			Υ++ : =Αληθής
		Αλλιώς.ΑΝ .Κ(Χ,Υ)=ΔΕΞΙΑΚΡΟ Η .Κ(Χ-1,Υ)=ΚΑΘΑΡΟ Η .Κ(Χ,Υ)=ΚΑΘΑΡΟ Τότε
			Υ++ : =Αληθής
		Αλλιώς.Αν .Κ(Χ,Υ)=ΑΚΡΟ ΤΌΤΕ
			Υ++ : =Αληθής
		Τελος Αν
		Αν χε τότε =Αληθής
	}
	Συνάρτηση Δυτικά(&Χ ως ακέραιος, &Υ ως ακέραιος, χε=ψευδής){
		ΑΝ Χ=1 Τότε
		Αλλιώς.Αν Υ=1  ή Υ=.ΜεγΥ Τότε
			Χ-- : = Αληθής
		Αλλιώς.Αν (.Κ(Χ-1,Υ)<>ΕΜΠΟΔΙΟ  ΚΑΙ .Κ(Χ-1,Υ)<>ΔΕΞΙΑΚΡΟ) Η  .Κ(Χ-1,Υ-1)=ΚΑΘΑΡΟ Τότε
			Χ-- : = Αληθής
		Τελος Αν
		Αν χε τότε =Αληθής
	}
	Συνάρτηση ΚοίταΜπροστά(Ρομπότ ως *ΡΟΜΠΟΤ, ΝαΠάει ως Λογικός=Ψευδής,  ΧωρίςΈλεγχο=Ψευδής) {
		κάνε ακέραιο θΧ, θΥ, Προσαν, ΟΚ
		Για Ρομπότ {
			θΧ=.ΘέσηΧ
			θΥ=.ΘέσηΥ
			Προσαν=.Βλέπει
		}
		Επίλεξε Με Προσαν
		Με ΒΟΡΕΙΑ
			ΟΚ=.Βόρεια(&θΧ, &θΥ, ΧωρίςΈλεγχο)
		Με ΑΝΑΤΟΛΙΚΑ
			ΟΚ=.Ανατολικά(&θΧ, &θΥ, ΧωρίςΈλεγχο)
		Με ΝΟΤΙΑ
			ΟΚ=.Νότια(&θΧ, &θΥ, ΧωρίςΈλεγχο)
		Με ΔΥΤΙΚΑ
			ΟΚ=.Δυτικά(&θΧ, &θΥ, ΧωρίςΈλεγχο)
		Τέλος επιλογής
		Αν ΟΚ Και ΝαΠάει Τότε
			Για Ρομπότ {
				// θέλει <=  και όχι = λόγω του τύπου και του χώρου εδώ!
				// ή (.ΘέσηΧ, .ΘέσηΥ)=(θΧ, θΥ)
				// ή
				//Στη .ΘέσηΧ=θΧ, .ΘέσηΥ=θΥ
				.ΘέσηΧ<=θΧ
				.ΘέσηΥ<=θΥ
			}		
		Τέλος Αν
		=ΟΚ
	}
	Συνάρτηση ΚοίταΔεξιά(Ρομπότ ως *ΡΟΜΠΟΤ) {
		κάνε ακέραιο θΧ, θΥ, Προσαν
		Για Ρομπότ {
			θΧ=.ΘέσηΧ
			θΥ=.ΘέσηΥ
			Προσαν=.Βλέπει
		}
		Επίλεξε Με Προσαν
		Με ΔΥΤΙΚΑ
			=.Βόρεια(&θΧ, &θΥ)
		Με ΒΟΡΕΙΑ
			=.Ανατολικά(&θΧ, &θΥ)
		Με ΑΝΑΤΟΛΙΚΑ
			=.Νότια(&θΧ, &θΥ)
		Με ΝΟΤΙΑ
			=.Δυτικά(&θΧ, &θΥ)
		Τέλος επιλογής
	}
	Συνάρτηση ΚοίταΑριστερά(Ρομπότ ως *ΡΟΜΠΟΤ) {
		κάνε ακέραιο θΧ, θΥ, Προσαν
		Για Ρομπότ {
			θΧ=.ΘέσηΧ
			θΥ=.ΘέσηΥ
			Προσαν=.Βλέπει
		}
		Επίλεξε Με Προσαν
		Με ΑΝΑΤΟΛΙΚΑ
			=.Βόρεια(&θΧ, &θΥ)
		Με ΝΟΤΙΑ
			=.Ανατολικά(&θΧ, &θΥ)
		Με ΔΥΤΙΚΑ
			=.Νότια(&θΧ, &θΥ)
		Με ΒΟΡΕΙΑ
			=.Δυτικά(&θΧ, &θΥ)
		Τέλος επιλογής		
	}
	Συνάρτηση ΚοίταΠίσω(Ρομπότ ως *ΡΟΜΠΟΤ) {
		κάνε ακέραιο θΧ, θΥ, Προσαν
		Για Ρομπότ {
			θΧ=.ΘέσηΧ
			θΥ=.ΘέσηΥ
			Προσαν=.Βλέπει
		}
		Επίλεξε Με Προσαν
		Με ΝΟΤΙΑ
			=.Βόρεια(&θΧ, &θΥ)
		Με ΔΥΤΙΚΑ
			=.Ανατολικά(&θΧ, &θΥ)
		Με ΒΟΡΕΙΑ
			=.Νότια(&θΧ, &θΥ)
		Με ΑΝΑΤΟΛΙΚΑ
			=.Δυτικά(&θΧ, &θΥ)
		Τέλος επιλογής		
	}
	Τμήμα Εμφάνισε {
		αν .μεγΧ=0 ή .μεγΥ=0 τότε εξοδος
		Κάλεσε Γεγονός "Αρχή"
		για ι=1 έως .μεγΥ-1
			για κ=1 έως .μεγΧ
			Επίλεξε Με .Κ(κ, ι)
				Με >=ΕΜΠΟΔΙΟ
					Κάλεσε Γεγονός "ΔεξιάΕμπόδιο", .Κ(κ, ι)
				Με ΚΑΘΑΡΟ
					Κάλεσε Γεγονός "ΔεξιάΚενό"
				Τέλος Επιλογής
				Αν .Μ(κ, ι)>0 Τότε Κάλεσε Γεγονός "ΔεξιάΚάτι"
			επόμενο
			Κάλεσε Γεγονός "ΑλλαγήΓραμμής"
		επόμενο
		για κ=1 έως .μεγΧ
			Κάλεσε Γεγονός "ΔεξιάΚενό"
			Αν .Μ(κ, ι)>0 Τότε Κάλεσε Γεγονός "ΔεξιάΚάτι"				
		Επόμενο
		Κάλεσε Γεγονός "ΑλλαγήΓραμμής"
	}
	Ιδιότητα ΠακέτοJson$ {
		Θέσε {
			Ένωσε γονικο μεγΧ, μεγΥ, Μ(), Κ() στη Π, Υ, Μ1(), Κ1()
			Όρισε ΟρισμόςΚόσμου ΛίσταJson	
			Με ΟρισμόςΚόσμου, "itempath" ως Εγγραφή(), "itempath" ως Εγγραφή$()
			Μέθοδος ΟρισμόςΚόσμου, "parser", Αξια$ ως ΟρισμόςΚόσμου
			Αν Τύπος$(ΟρισμόςΚόσμου)="JsonObject" Τότε
				ΔοκιμήΠ=Εγγραφή("Πλάτος")
				ΔοκιμήΥ=Εγγραφή("Ύψος")
				Αν ΔοκιμήΠ>=5 και ΔοκιμήΠ<=20 και ΔοκιμήΥ>=5 και ΔοκιμήΥ<=20 Τότε
				(Π, Υ)=(ΔοκιμήΠ, ΔοκιμήΥ)
				Πίνακες Μ1(1 έως Π, 1 έως Υ), Κ1(1 έως Π, 1 έως Υ)=ΚΑΘΑΡΟ
				Για ι=1 έως Π: Για κ=1 έως Υ
					Μ1(ι,κ)=Εγγραφή("Μπιμπερ.["+γραφη$(ι)+","+γραφη$(κ)+"]")
					Επίλεξε Με Εγγραφή$("Εμπόδια.["+γραφη$(ι)+","+γραφη$(κ)+"]")
					Με "1"
						 Κ1(ι, κ)=ΕΜΠΟΔΙΟ
					Με "2"
						Κ1(ι, κ)=ΚΑΤΩΑΚΡΟ
					Με "3"
						Κ1(ι, κ)=ΑΚΡΟ
					Με "4"
						Κ1(ι, κ)=ΔΕΞΙΑΚΡΟ
					Τέλος Επιλογής
				Επόμενο : Επόμενο
				Τέλος Αν
			Τέλος Αν
		}
		Αξία {
			Σταθερή μονοπάτι$="assignpath"
			Ένωσε γονικο μεγΧ, μεγΥ, Μ(), Κ() στη Π, Υ, Μ1(), Κ1()
			Όρισε ΟρισμόςΚόσμου ΛίσταJson	
			Με ΟρισμόςΚόσμου, "json" ως Φορμάρισμα$()
			Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Πλάτος", Π
			Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Ύψος", Υ
			Για ι=1 έως Π: Για κ=1 έως Υ
				Αν Μ1(ι, κ)>0 Τότε Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Μπιμπερ.["+γραφη$(ι)+","+γραφη$(κ)+"]", Μ1(ι, κ)
				Αν Κ1(ι, κ)<>0 Τότε Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Εμπόδια.["+γραφη$(ι)+","+γραφη$(κ)+"]", Κ1(ι, κ)
			Επόμενο : Επόμενο
			Αξία$=Φορμάρισμα$(0)
			Όρισε ΟρισμόςΚόσμου Τίποτα
		}
	}
	Ιδιότητα ΧΠ {
		Αξια {
			Ένωσε γονικό μεγΧ στη Χ
			Αξία=Χ
		}
	}
	Ιδιότητα ΥΠ {
		Αξια {
			Ένωσε γονικό μεγΥ στη Υ
			Αξία=Υ
		}
	}
Κλάση:
	Τμήμα Κόσμος (Χ ως ακέραιος, Υ ως ακέραιος){
		Πίνακας .Κ(1 εως Χ,1 εως Υ)=ΚΑΘΑΡΟ
		Πίνακας .Μ(1 εως Χ,1 εως Υ)=0
		.μεγΧ<=Χ
		.μεγΥ<=Υ
	}
}
Κλάση ΡΟΜΠΟΤ {
	γεγονότα "σχεδίασε", "ΚίνησηΜπροστά", "Εικόνα","σχεδίασεΦόντο"
	Βλέπει=ΑΝΑΤΟΛΙΚΑ, Εχει=ΔΕΝ_ΥΠΑΡΧΕΙ_ΚΑΤΙ, Πόσα_Εχει=0
	ΘέσηΧ=0, ΘέσηΥ=0
	Τμήμα ΠηγαινεΕμπρός (&παλιόΧ, &παλιόΥ) {
			Κάλεσε Γεγονός "ΚίνησηΜπροστά", παλιόΧ, παλιόΥ, .ΘέσηΧ, .ΘέσηΥ, .Βλέπει
			(παλιόΧ, παλιόΥ) = (.ΘέσηΧ, .ΘέσηΥ)
	}
	Τμήμα ΣβήσεΜε {
		Κάλεσε Γεγονός "σχεδίασεΦόντο", .ΘέσηΧ, .ΘέσηΥ
	}
	Τμήμα ΣχεδίασεΠρώτηΦορά {
		Κάλεσε Γεγονός "σχεδίασε", .ΘέσηΧ, .ΘέσηΥ, .Βλέπει, Ψευδές
	}
	Τμήμα ΣχεδίασεΞανά {
		Κάλεσε Γεγονός "σχεδίασε", .ΘέσηΧ, .ΘέσηΥ, .Βλέπει
	}
	Τμήμα Σχεδίασε (Εκεί=-1) {
		Κάλεσε Γεγονός "σχεδίασε", .ΘέσηΧ, .ΘέσηΥ, Εκεί
	}
	Τμήμα ΣχεδίασεΑντίγραφο (προσανατολισμός, γωνία, μέγεθος) {
		// στη θέση του δρομέα γραφικών.
		// μέγεθος 100 είναι 512Χ512 pixels (512x15 X 512x15 twips στα 96dpi)
		// γωνία σε μοίρες (+, -)
		// βάσει προσανατολισμού επιλέγει εικόνα
		Κάλεσε Γεγονός "Εικόνα", προσανατολισμός, γωνία, μέγεθος
	}
	Τμήμα ΚάνεΑριστερά  {
		Επίλεξε Με .Βλέπει
		Με ΝΟΤΙΑ
			.Βλέπει<=ΑΝΑΤΟΛΙΚΑ
		Με ΔΥΤΙΚΑ
			.Βλέπει<=ΝΟΤΙΑ
		Με ΒΟΡΕΙΑ
			.Βλέπει<=ΔΥΤΙΚΑ
		Με ΑΝΑΤΟΛΙΚΑ
			.Βλέπει<=ΒΟΡΕΙΑ
		Τέλος επιλογής
		Κάλεσε Γεγονός "σχεδίασε", .ΘέσηΧ, .ΘέσηΥ, .Βλέπει
	}
}
Κάνε ΧΠ=20, ΥΠ=10
Ομάδα ΜεΓεγονότα Κόσμος=Κόσμος(ΧΠ, ΥΠ)
Κάνε Φόντο1=5, ΓραμμηΧρ=7, Τοίχος=1, ΚάτιΧρ=4, γω=0  ' ΓΩΝΙΑ ΕΠΙΠΡΟΣΘΕΤΗ ΓΙΑ ΚΙΝΗΣΗ
Κατάσταση Προηγούμενη
Κάνε Οριζόντιο=0, Κελί=0, ΚΑ=100, ΚΣ=50, ΠίσωΧώρος$
Κάνε αρχηΓραμμήςΧ, αρχηΓραμμής, ΓραμμήΚ, ρχ, ρψ
Φόντο1=5
ΓραμμηΧρ=4
Τοίχος=14
ΚάτιΧρ=4
// Καρελ
Κάνε Κάρελ, ΚάρελΔυτικά
Κάνε Περίγραμμα, μεγ,	Κάρελ_χρώμα
// Αρχικά φτιάχνουμε ένα ρομπότ με γεγονότα (στατικό στο τμήμα)
Ομάδα ΜεΓεγονότα Ρομπότ=Ρομποτ()
// για να τπ χειριστούμε από την συνάρτηση Ζήτα(), φτιάχνουμε μια γενική
// που είναι δείκτης στη Ρομπότ, που είναι επώνυμη άρα ο δείκτης είναι αναφορά!
// έτσι έχουμε τοπική τη Ρομπότ και μια γενική που δείχνει την τοπική.
// Στην Ζήτα() η ΚάρελΡομπότ καλεί μια μέθοδο που με τη σειρά της καλεί ένα γεγονός
// έτσι στην ουσία η Ζήτα() καλεί πίσω (call back) από εκεί που κλήθηκε πριν τερματίσει
// Θέλουμε να βλέπουμε να αλλάζει προσανατολισμό το ρομποτ στον εικονικό κόσμο, καθώς επιλέγουμε από τη λίστα!
// Οι πληροφορίες για το κόσμο, όπως εμφανίζεται, αφενός δεν είναι στο ρομπότ, αφετέρου δεν είναι στο αντικείμενο κόσμος.
// Όλα αυτά είναι έξω από τα αντικείμενα.
// Η Ζήτα() έχει 2Χ2 χρήσεις (αυτό δεν είναι καλό, αλλά εδώ έγινε για συντομία)
// Χρησιμοποιεί το μενού επιλογών ασύγχρονα, για να βλέπει που πάει ο δείκτης μας και να μας αλλάζει πληροφορίες.
// Αυτό το κάνει για δυο διαφορετικά μενού. Σε καθένα έχουμε ένα πίνακα αντιστοιχιών. Ζητάμε το νούμερο επιλογής.
// Αυτές είναι οι 2 χρήσεις. Για κάθε όμως μενού μπορούμε να ζητήσουμε την αντιστοιχία σε αλφαριθμητικό. Επειδή όμως
// η Ζήτα() είναι αριθμητική συνάρτηση, δεν θα γυρίσουμε αλφαριθμητικό αλλά πίνακα με ένα στοιχείο αλφαριθμητικό!
// Έτσι η Ζήτα() ή γυρνάει νούμερο η πίνακα!
// Αν στην μεταβλητή που θέλουμε να γράψουμε το αποτέλεσμα είναι πίνακας και βάζουμε νούμερο, θα πάρουμε λάθος.
// Αν είναι νούμερο θα γίνει δείκτης σε πίνακα. Οπότε αν έχουμε φρέσκια μεταβλητή θα πάρει τιμή πρώτη φορά από τη συνάρτηση.
Γενική ΚάρελΡομπότ->Ρομπότ
Κάνε παλιόΧ, παλιόΥ

Για ΚάρελΡομπότ {
	.Βλέπει=ΑΝΑΤΟΛΙΚΑ
	.ΘέσηΧ=1
	παλιόΧ=1
	.ΘέσηΥ=1
	παλιόΥ=1
}	



// Συναρτήσεις εξυπηρέτησης γεγονότων
Συνάρτηση Κόσμος_Αρχή {
	αρχηΓραμμήςΧ=θέση.Χ : αρχηΓραμμής=θέση.Υ : ΓραμμήΚ=1
	ρχ=θέση.Χ+ΚΑ:ρψ=θέση.Υ
}
Συνάρτηση Κόσμος_ΑλλαγήΓραμμής {
	Θέση αρχηΓραμμήςΧ,  αρχηΓραμμής+ΚΑ*ΓραμμήΚ
	Κελί=0 :  Οριζόντιο=Ψευδές : 	ΓραμμήΚ++	
}
// ιδιωτικό τμήμα
Τμήμα Γραμμούλες {
	Αν ΓραμμηΚ=1 Τότε
		Θέση χ, ψ : Χαράξε 0, ΚΣ, ΓραμμηΧρ
	Αλλιώς.Αν ΓραμμήΚ=ΥΠ Τότε
		Θέση χ, ψ :	Χαράξε 0, -ΚΣ-ύψος.σημείου, ΓραμμηΧρ
	Αλλιώς
		Θέση χ, ψ -ΚΣ : Χαράξε 0, ΚΑ, ΓραμμηΧρ
	Τέλος Αν
	Αν Κελί=1 Τότε
		Θέση χ, ψ : Χαράξε ΚΣ, 0, ΓραμμηΧρ
	Αλλιώς.Αν Κελί=ΧΠ τότε
		Θέση χ, ψ : Χαράξε -ΚΑ-πλάτος.σημείου, 0, ΓραμμηΧρ
	Αλλιώς
		Θέση χ-ΚΣ, ψ : Χαράξε ΚΑ, 0, ΓραμμηΧρ
	Τέλος Αν
}
Συνάρτηση Κόσμος_ΔεξιάΚενό {
	Βήμα ΚΑ : Κελί++
	τοπικη χ=θεση.χ, ψ=θέση.ψ
	Κάλεσε Τοπικά Γραμμούλες
	θέση χ, ψ : 	Οριζόντιο=Ψευδές
	Αν Υπάρχει(Προηγούμενη, Κελι) Τότε Αφαίρεση Προηγούμενη, Κελι:θέση χ, ψ
}
Συνάρτηση Κόσμος_ΔεξιάΚάτι {
	// γράφει με XOR (δεύτερο γράψιμο σβήνει)
	Χρώμα ! ΚάτιΧρ {	Κύκλος Γέμισμα ΚάτιΧρ, ΚΑ/8, 1, ΚάτιΧρ}
}
Συνάρτηση Κόσμος_ΔεξιάΕμπόδιο {
	Διάβασε Νέο Τι
	Βήμα ΚΑ:Κελί++:τοπικη χ=θεση.χ, ψ=θέση.ψ
	Κάλεσε Τοπικά Γραμμούλες
	θέση χ, ψ
	Αν Οριζόντιο και Τι<ΑΚΡΟ τότε
		Αν Κελί<ΧΠ τότε	θέση χ-ΚΑ*.5, ψ+ΚΑ*.5 : 	Πάχος 4 {Χάραξε ΚΑ, 0, Τοίχος} :θέση χ, ψ
	Αλλιώς
		Οριζόντιο=Αληθές
	Τέλος αν
	Αν Τι=ΑΚΡΟ Τότε
		Αν Δεν Υπάρχει(Προηγούμενη, Κελι) Τότε Προσθήκη Προηγούμενη, Κελί
	Αλλιώς.Αν Υπάρχει(Προηγούμενη, Κελι) Τότε
		Αν Τι<>ΚΑΤΩΑΚΡΟ τότε
			Αν ΓραμμήΚ<ΥΠ τότε
				θέση χ+ΚΑ*.5, ψ-ΚΑ*.5 : Πάχος 4 {Χάραξε  0, ΚΑ, Τοίχος} : θέση χ, ψ
			Αλλιώς
				Αφαίρεση Προηγούμενη, Κελι				
			Τέλος αν
		Τέλος Αν
	Αλλιώς
		Προσθήκη Προηγούμενη, Κελί
	Τέλος αν
}
Συνάρτηση Ρομπότ_Σχεδίασε (Νεο Χ, Υ, Έτσι, Παλιο=Αληθές) {
	παλιόΧ=Χ
	παλιόΥ=Υ
	Θέση  ρχ+ΚΑ*(Χ-1), ρψ+ΚΑ*(Υ-1)
	Αν Παλιό Τότε Διάφανο Διαφάνεια$
	Κάλεσε Τοπικά Ρομπότ_Εικόνα(Έτσι, 0, μεγ)
}
Συνάρτηση Ρομπότ_Εικόνα(Νέο Πώς, γω, μεγ) {
	Επίλεξε Με Πώς
	Με ΒΟΡΕΙΑ
		Διάφανο Κάρελ,5, 90+γω, μεγ
	Με ΑΝΑΤΟΛΙΚΑ
		Διάφανο Κάρελ, 5,γω, μεγ
	Με ΔΥΤΙΚΑ
		Διάφανο ΚάρελΔυτικά, 5, γω, μεγ
	Με ΝΟΤΙΑ
		Διάφανο ΚάρελΔυτικά, 5, 90+γω, μεγ
	Τέλος Επιλογής
	Ανανέωση 20
}
Συνάρτηση Ρομπότ_σχεδίασεΦόντο (Νεο Χ, Υ) {
	Θέση  ρχ+ΚΑ*(Χ-1), ρψ+ΚΑ*(Υ-1)
	Διάφανο Διαφάνεια$
	Βάλε Διαφάνεια$ : Πέτα
}
Συνάρτηση Ρομπότ_ΚίνησηΜπροστά(Νεο Χ,Υ, Χ1, Υ1, Έτσι) {
	τοπική μ=Μεγάλο.Σειράς(Απολ(Χ1-Χ), Απολ(Υ1-Υ))*Οροφ(μεγ δια 4+1)*3
	αν μ=0 τότε
		Κάλεσε Τοπικά Ρομπότ_Σχεδίασε(Χ1, Υ1, Έτσι)
	αλλιώς
		τοπικές ΥΥ=(Υ1-Υ)/μ, ΧΧ=(Χ1-Χ)/μ
		Ανανέωση 5000
		ενώ μ>0		
			Υ+=ΥΥ : Χ+=ΧΧ
			Διάφανο Διαφάνεια$
			Θέση ρχ+ΚΑ*(Χ-1), ρψ+ΚΑ*(Υ-1)
			Κάλεσε Τοπικά Ρομπότ_Εικόνα(Έτσι, ΑΝ(3-μ υπολ 3->7, 0,-7),  μεγ ) ' ΑΝ(3-μ υπολ 3->μεγ*1.2, μεγ,μεγ*1.2))
			μ--
			Αν μ>1 τότε Ανανέωση  5000: Αναμονή 10
		Τέλος ενώ
		Ανανέωση 20
	Τέλος αν
}
Επιστροφή
Ρουτίνα ΔείξεΚόσμο()
	Ανανέωση 5000
	Προηγούμενη=Λίστα
	Θέση 0, ΘέσηΣ
	Εικόνα ΠίσωΧώρος$
	Θέση (Χωρ-ΚΑ*ΧΠ) δια 2-ΚΣ, ((ΘέσηΜ1-ΘέσηΣ)-ΚΑ*(ΥΠ)) δια 2+ΘέσηΣ+ΚΣ
	Κόσμος.Εμφάνισε
	Περίγραμμα=Οροφ(14000/ΚΑ)
	Για ΚάρελΡομπότ{
			(.ΘέσηΧ, .ΘέσηΥ, .Βλέπει)=(1, ΥΠ, ΑΝΑΤΟΛΙΚΑ)
	}
	Για ΚάρελΡομπότ {
		Αν ΣΚ τότε
			.Εχει=ΥΠΑΡΧΕΙ_ΚΑΤΙ	
		Αλλιώς
			.Εχει=ΔΕΝ_ΥΠΑΡΧΕΙ_ΚΑΤΙ
		Τέλος Αν
		.Βλέπει=Κάρελ_Βλέπει
		.Πόσα_Εχει=ΣΚ
		.ΘέσηΧ=Κάρελ_εισΧ
		.ΘέσηΥ=ΥΠ-Κάρελ_εισΥ+1
	}
	ΚάρελΡομπότ=>ΣχεδίασεΠρώτηΦορά
	Ανανέωση 20
Ανανέωση
Τέλος Ρουτίνας
Ρουτίνα ΝέοςΚόσμοςΑπόΛίστα(ΛίσταJson$)
	Όρισε Τοπικό ΟρισμόςΚόσμου ΛίσταJson
	Με ΟρισμόςΚόσμου, "itempath" ως Εγγραφή(), "itempath" ως Εγγραφή$()
	Μέθοδος ΟρισμόςΚόσμου, "parser", ΛίσταJson$ ως νέο Λίστα1    ' ή ως ΟρισμόςΚόσμου αν δεν μας ενδιαφέρει να το χάσουμε!
	Αν Τύπος$(Λίστα1)="JsonObject" Τότε    ' εχουμε αντικείμενο Json
	 	ΟρισμόςΚόσμου=Λίστα1
		Αν Εγγραφή$("Magic Id")="11223344Karel" Τότε 'δικό μας json
			όνομαπίνακα$=Εγγραφή$("Τίτλος Κόσμου")
			Αλλαγή Ποιός(203), ΦΡΑΣΗ όνομαπίνακα$
			Για ΚάρελΡόμποτ {
				.Πόσα_Εχει=Εγγραφή("Κάρελ.Σάκος")
				Αν .Πόσα_Εχει=0 Τότε .Εχει=ΔΕΝ_ΥΠΑΡΧΕΙ_ΚΑΤΙ Αλλιώς .Εχει=ΥΠΑΡΧΕΙ_ΚΑΤΙ
				.ΘέσηΧ=Εγγραφή("Κάρελ.ΘέσηΧ")
				.ΘέσηΥ=Εγγραφή("Κάρελ.ΘέσηΥ")
				.Βλέπει=Εγγραφή("Κάρελ.Βλέπει")			
			}
			// ενημέρωση πεδίων:
			ΣΚ=Εγγραφή("Κάρελ.Σάκος")
			Κάρελ_εισΧ=Εγγραφή("Κάρελ.ΘέσηΧ")
			Κάρελ_εισΥ=Εγγραφή("Κάρελ.ΘέσηΥ")
			Κάρελ_Βλέπει=Εγγραφή("Κάρελ.Βλέπει")
			Κάρελ_χρώμα=Εγγραφή("Κάρελ.Χρώμα")
			Σκοπός=Μικρό.Σειράς(Μεγάλο.Σειράς(Ακ(Εγγραφή("Κόσμος.Σκοπός")),1), 5)
			Αλλαγή Ποιός(203), ΦΡΑΣΗ Γραφη$(ΣΚ, "")
			Αλλαγή Ποιός(204), ΦΡΑΣΗ Γραφη$(Κάρελ_εισΧ, "")
			Αλλαγή Ποιός(205), ΦΡΑΣΗ Γραφη$(Κάρελ_εισΥ, "")
			Αλλαγή Ποιός(250), ΦΡΑΣΗ Κεφ$(Ζήτα(,,Σκοπός)#Τιμή$(0))
			ΟρισμόςΚόσμου=Εγγραφή("Κόσμος")
			Με ΟρισμόςΚόσμου, "json" ως Φορμάρισμα$()
			Κόσμος.ΠακέτοJson$=Φορμάρισμα$(0)
			Σημειώσεις$=Εγγραφή$("Σημειώσεις")
			ΧΠ=Κόσμος.ΧΠ
			ΥΠ=Κόσμος.ΥΠ
			// ενημέρωση πεδίων: ΧΨ, ΨΚ
			ΧΚ=ΧΠ
			ΨΚ=ΥΠ
			Αλλαγή Ποιός(201), ΦΡΑΣΗ Γραφη$(ΧΚ, "")
			Αλλαγή Ποιός(202), ΦΡΑΣΗ Γραφη$(ΨΚ, "")
			ΦτιάξεΚάρελΚόσμου()
			ΔείξεΚόσμο()
		Τέλος Αν
	Τέλος Αν
Τέλος Ρουτίνας
Ρουτίνα ΝέοςΚόσμος(ΠΧ, ΠΥ)
	Αν @ΈλεγχοςΑριθμού(ΠΧ, 5, 20) Τότε ΧΠ=ΠΧ Αλλιώς ΧΠ=20
	Αν @ΈλεγχοςΑριθμού(ΠΥ, 5, 20) Τότε ΥΠ=ΠΥ Αλλιώς ΥΠ=10
	Κόσμος=Κόσμος(ΧΠ, ΥΠ)
	ΦτιάξεΚάρελΚόσμου()
Τέλος Ρουτίνας
Ρουτίνα ΦτιάξεΚάρελΚόσμου()
	Τοπική ΚΑ1, ΚΑ2
	ΚΑ1=(Χωρ/ΧΠ δια (πλάτος.σημείου*2))*πλάτος.σημείου*2
	ΚΑ2=((ΘέσηΜ1-ΘέσηΣ)/ΥΠ δια (πλάτος.σημείου*2))*πλάτος.σημείου*2
	ΚΑ=μικρό.σειράς(ΚΑ1, ΚΑ2)
	ΚΣ=ΚΑ/2
	μεγ=οροφ(ΚΑ/Εικόνα.Υ(Κάρελ)*100)
	Περίγραμμα=Οροφ(14000/ΚΑ)
	Κάρελ=ΚάρελΣχέδιο(Κάρελ_χρώμα, Περίγραμμα)
	ΚάρελΔυτικά=ΚάρελΣχέδιο(Κάρελ_χρώμα, Περίγραμμα, 1)
	μεγ=οροφ(ΚΑ/Εικόνα.Υ(Κάρελ)*100)
Τέλος Ρουτίνας
Ρουτίνα ΕισαγωγήΚόσμου()
	// Έλεγχος αν υπάρχει κάτι για να σωθεί
	Τοπικές Παλιό$=όνομααρχείου$
	Αν Υπάρχει.Νέο Τότε
		Αν Ρώτα$("Θες να σώσεις πρώτα αυτό που έφτιαξες",Τιτλ$,"*Ναι", "Όχι")="Ναι" Τότε
			ΕξαγωγήΚόσμου()
		Τέλος Αν
	Τέλος Αν
	Αναφορά "Εισάγω Κόσμο από αρχείο..."
	
	Άνοιγμα.Αρχείου όνομααρχείου$, ,"Επιλογή Κόσμου",Τύπος.Αρχείου$
	Διάβασε Τοπικά Νέο_όνομααρχείου$
	Αν Νέο_όνομααρχείου$="" τότε έξοδος Ρουτίνας
	Αν Τύπος.Αρχείου$(Νέο_όνομααρχείου$)<>Τύπος.Αρχείου$ Τότε
		Νέο_όνομααρχείου$+="."+Τύπος.Αρχείου$
	Τέλος Αν
	Αν δεν Υπάρχει(Νέο_όνομααρχείου$) Τότε Έξοδος Ρουτίνας
	όνομααρχείου$=Νέο_όνομααρχείου$
	Δες οκ {
		// το αρχείο είναι σε ANSI (7bit), οπότε το κάνουμε μετατροπή σε UTF16LE με την χαρ$(αλφαριθμητικό$)
		// Φορτώνουμε με τη Διάρθρωση() που δίνει μια διάρθρωση μνήμης (Εδώ σε bytes)
		// Η Εκφρ$() γυρνάει ένα αλφαριθμητικό με όλα τα bytes της διάρθρωσης (κάνει διάφορες δουλειές ανάλογα το αντικείμενο)
		ΝέοςΚόσμοςΑπόΛίστα(χαρ$(Εκφρ$(Διάρθρωση(όνομααρχείου$))))
		Υπάρχει.Νέο=Ψευδές
	}
	Αν όχι οκ τότε
		όνομααρχείου$=Παλιό$: Μπιπ: Οθόνη: Αναφορά "Το αρχείο δεν φορτώθηκε":Αναμονή 5000
	Τέλος Αν
Τέλος Ρουτίνας
Ρουτίνα ΕξαγωγήΚόσμου()
	Αν Δεν Υπάρχει.Νέο Τότε
		Βάλε Ρώτα("Δεν Υπάρχει κάτι να σώσω",Τιτλ$,"Το Κατάλαβα",""):Πέτα
	Αλλιώς
		Οθόνη
		Αναφορά "Σώνω το Κόσμο σε αρχείο..."

		Αποθήκευση.ως όνομααρχείου$, ".." ,"Σώσε το Κόσμο",Τύπος.Αρχείου$
		Διάβασε Τοπικά Νέο_όνομααρχείου$
		Αν Νέο_όνομααρχείου$="" τότε έξοδος Ρουτίνας
		Αν Τύπος.Αρχείου$(Νέο_όνομααρχείου$)<>Τύπος.Αρχείου$ Τότε
			Νέο_όνομααρχείου$+="."+Τύπος.Αρχείου$
		Τέλος Αν
		Αν Υπάρχει(Νέο_όνομααρχείου$) Τότε
			Αν Ρώτα("Το αρχείο υπάρχει, θες να γράψεις νέο με το ίδιο όνομα;", τιτλ$, "Ναι", "*Όχι")=2 Τότε Έξοδος Ρουτίνας
		Τέλος Αν
		όνομααρχείου$=Νέο_όνομααρχείου$
		Όρισε Τοπικό ΟρισμόςΚόσμου ΛίσταJson
		Τοπική μονοπάτι$="assignpath"
		Με ΟρισμόςΚόσμου, "itempath" ως Εγγραφή(), "itempath" ως Εγγραφή$()
		Με ΟρισμόςΚόσμου, "json" ως Φορμάρισμα$()
		Μέθοδος  ΟρισμόςΚόσμου, "parser", Κόσμος.ΠακέτοJson$ ως νέο ΠακέτοJson
		Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Magic Id","11223344Karel"
		Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Locale Id", 1032  ' Ελληνικά
		Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Τίτλος Κόσμου", όνομαπίνακα$
		Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κόσμος", ΠακέτοJson
		Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κόσμος.Σκοπός", Σκοπός
		Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κάρελ.Σάκος", ΣΚ
		Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κάρελ.ΘέσηΧ", Κάρελ_εισΧ
		Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κάρελ.ΘέσηΥ", Κάρελ_εισΥ
		Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κάρελ.Βλέπει", Κάρελ_Βλέπει
		Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κάρελ.Χρώμα", Κάρελ_χρώμα
		Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κόσμος.Σημειώσεις", Σημειώσεις$
		τοπικές κ, οκ
		Δες οκ {
			Άνοιξε όνομααρχείου$	για εξαγωγή ως #Κ
			Τύπωσε #κ, Φορμάρισμα$(0);   // χωρίς αλλαγή γραμμής
			Κλείσε #κ
		}
		Οθόνη
		Αν οκ Τότε
			Οθόνη
			Τύπωσε Μέρος $(4), "Το αρχείο σώθηκε ως: "; όνομααρχείου$
			Τύπωσε
			Τύπωσε Μέρος $(4), "Μέγεθος: ";Αρχείου.Μήκος(όνομααρχείου$);"bytes"
			Υπάρχει.Νέο=Ψευδές
		Αλλιώς
			Τύπωσε "Δεν σώθηκε το αρχείο:";Λάθος$
			Μπιπ
		Τέλος Αν
		Αναμονή 5000
	Τέλος Αν
Τέλος Ρουτίνας

Ρουτίνα Βοηθ()
	Αν ΕΙΔΟΣ=0 Τότε
		ΠΛ0=ΠΛ	
	Αλλιώς
		ΠΛ0=ΠΛ1
		Αν ΕΙΔΟΣ=2 Τότε
			Βάλε Αριθμός+ Ακ(((Πλάτος/3-3)-Πλ1)/2)+1
		Αλλιώς.Αν ΕΙΔΟΣ=3 Τότε
			Βάλε  ΑΡΙΘΜΟΣ+ΠΛ-Πλ1
		Τέλος Αν
	Τέλος Αν
Τέλος Ρουτίνας

Ρουτίνα Κεφαλίδα(ΕΙΔΟΣ)
	Βοηθ()
	Διάβασε Νέο Χ,Υ, Αρχ$
	Δρομέας Χ, Υ
	Πένα 0 {
		Στόχος Μ,":", ΠΛ0, 1, , , 102, Αρχ$
		Στόχος Μ,  0
	}
Τέλος Ρουτίνας

Ρουτίνα ΚεφαλίδαΔεξιά(ΕΙΔΟΣ)
	Βοηθ()
	Διάβασε Νέο Χ,Υ, Αρχ$
	Δρομέας Χ, Υ
	Πένα 0 {
		Στόχος Μ,":", ΠΛ0, 1, , , 103, Αρχ$
		Στόχος Μ,  0
	}
Τέλος Ρουτίνας
Ρουτίνα Στόχος(οδηγ, ΕΙΔΟΣ)
	τοπικές υψ=1, βάση1=102
	Βοηθ()
	Διάβασε Νέο Χ,Υ, ΤΤ, Αρχ$
	Πέτα ' ενα επιπλέον αλφαριθμητικό
	Διάβασε ? υψ, βαση1
	Δρομέας Χ, Υ
	Τοπική οδ$= "κωδ ="+γραφη$(οδηγ)
	Πένα #ddffcc {Στόχος Μ,οδ$, ΠΛ0, υψ, 1, 15, βάση1, Αρχ$}
	Προσθήκη Ποιός, οδηγ:=Μ
Τέλος Ρουτίνας

Ρουτίνα ΕισαγωγήΟνόματος(ΕΙΔΟΣ)
	Βοηθ()
	Διάβασε Νεο Χ,Υ, Μ, Αρχ$, Πλ$, &τι$
	Δρομέας Χ, Υ
	Αλλαγή Μ, ΦΡΑΣΗ " "
	Ανανέωση 20
	Τοπική παλιό$=τι$
		Νήμα Ν1 Ξεκίνα
		Εισαγωγή ! τι$, ΠΛ0 Μήκος=100
	Νήμα Ν1 Κράτα
	Αν ΠΕΔΙΟ=99 τότε  τι$=παλιο$: Αλλαγή Μ, ΦΡΑΣΗ τι$: Οθόνη:Έξοδος Ρουτίνας
	Αν Αποκ$(τι$)="" τότε
		μπιπ
		Αλλαγή Μ, ΠΕΝΑ 7, ΦΡΑΣΗ Αρχ$
	Αλλιώς
		τι$=ΚΕΦ$(τι$)
		Αλλαγή Μ, ΠΕΝΑ 15, ΦΡΑΣΗ τι$
	Τέλος Αν
Τέλος Ρουτίνας

Ρουτίνα ΕισαγωγήΑριθμού(ΕΙΔΟΣ)
	Βοηθ()
	Διάβασε Νεο Χ,Υ, Μ, Αρχ$, Πλ$, &τι, μινιμουμ%, μάξιμουμ%
	Δρομέας Χ, Υ
	Αλλαγή Μ, ΦΡΑΣΗ " "
	Ανανέωση 20
	Τοπική Αρ%
	Αρ%=τι
	Νήμα Ν1 Ξεκίνα  ' κάνουμε το δεξί κλικ να πατάει το Esc
		Εισαγωγή ! Αρ%, ΠΛ0
	Νήμα Ν1 Κράτα
	Αν ΠΕΔΙΟ=99 τότε Αλλαγή Μ, ΦΡΑΣΗ Γραφη$(τι, ""): Οθόνη: Έξοδος Ρουτίνας
	Τοπική Τι$=Γραφη$(Αρ%, "")
	τι=Αν(Αρ%<μινιμουμ%->μινιμουμ%, Αν(Αρ%>μάξιμουμ%->μάξιμουμ%, Αρ%))
	τι$=Γραφή$(τι,"")
	Αν Αποκ$(τι$)="" τότε
		μπιπ
		Αλλαγή Μ, ΠΕΝΑ 7, ΦΡΑΣΗ Αρχ$
	Αλλιώς
		τι$=ΚΕΦ$(τι$)
		Αλλαγή Μ, ΠΕΝΑ 15 ,  ΦΡΑΣΗ τι$
	Τέλος Αν
Τέλος Ρουτίνας
Ρουτίνα ΕμφάνισηΑριθμού(ΕΙΔΟΣ)
	Βοηθ()
	Διάβασε Νεο Χ,Υ, Μ, Αρχ$, Πλ$, &τι, μινιμουμ%, μάξιμουμ%
	Δρομέας Χ, Υ
	Τοπική Αρ%
	Αρ%=τι
	Τοπική Τι$=Γραφη$(Αρ%, "")
	τι=Αν(Αρ%<μινιμουμ%->μινιμουμ%, Αν(Αρ%>μάξιμουμ%->μάξιμουμ%, Αρ%))
	τι$=Γραφή$(τι,"")
	Αλλαγή Μ, ΠΕΝΑ 15, ΦΡΑΣΗ τι$
Τέλος Ρουτίνας

Ρουτίνα Θόλωσε()
	Θέση 0,ΘέσηΣ
	Πένα ,200
	Βάψε χ.σημεία,ΘέσηΜ-ΘέσηΣ, 7, 7
	Πένα  , 255
Τέλος Ρουτίνας
//  @ΈλεγχοςΑριθμού(10, 5, 20)  επιστρέφει boolean 10>=5 Και 10<=20
Συνάρτηση ΈλεγχοςΑριθμού(α)
	=α>=αριθμός και α<=αριθμός
Τέλος Συνάρτησης

Ρουτίνα ΔείξεΡομποτ(Χ, Υ, Έτσι)
	παλιόΧ=Χ
	παλιόΥ=Υ
	Θέση  ρχ+ΚΑ*(Χ-1), ρψ+ΚΑ*(Υ-1)
	Κάλεσε Τοπικά Ρομπότ_Εικόνα(Έτσι, 0, μεγ)
Τέλος Ρουτίνας

Ρουτίνα ΒάλεΚάτι(Κελί, ΓραμμήΚ, Έτσι)
	τοπικη χ1=θεση.χ, ψ1=θέση.ψ
	Διάφανο Διαφάνεια$
	Θέση αρχηΓραμμήςΧ+ΚΑ*Κελί, αρχηΓραμμής+ΚΑ*(ΓραμμήΚ-1)
	Κελί++
	Κάλεσε τοπικά Κόσμος_ΔεξιάΚάτι()
	θέση χ1, ψ1
	Κάλεσε Τοπικά Ρομπότ_Εικόνα(Έτσι, 0, μεγ)
Τέλος Ρουτίνας
Ρουτίνα ΒάλεΚενό(Κελί, ΓραμμήΚ, Έτσι)
	τοπικη χ1=θεση.χ, ψ1=θέση.ψ
	Διάφανο Διαφάνεια$	
	Κάλεσε τοπικά Κόσμος_ΔεξιάΚάτι()
	θέση χ1, ψ1
	Κάλεσε Τοπικά Ρομπότ_Εικόνα(Έτσι, 0, μεγ)
Τέλος Ρουτίνας
Ρουτίνα Συνθήκες()
	Ανανέωση 5000
	τοπικη χ1=θεση.χ, ψ1=θέση.ψ, εγ$, πλαγ=πλαγια
	Έγγραφο εγ$
	Οθόνη
	Πένα #aaffaa {
		πλαγια 1
		Δρομέας 0, Ύψος-3
		Αν Κόσμος.ΚοίταΜπροστά(ΚάρελΡομπότ) Τότε εγ$="Καθαρό Μπροστά, " Αλλιώς εγ$="Εμπόδιο Μπροστά, "
		Αν Κόσμος.ΚοίταΔεξιά(ΚάρελΡομπότ) Τότε εγ$="Καθαρό Δεξιά, " Αλλιώς εγ$="Εμπόδιο Δεξιά, "
		Αν Κόσμος.ΚοίταΑριστερά(ΚάρελΡομπότ) Τότε εγ$="Καθαρό Αριστερά, " Αλλιώς εγ$="Εμπόδιο Αριστερά, "
		Αν Κόσμος.ΚοίταΠίσω(ΚάρελΡομπότ) Τότε εγ$="Καθαρό Πίσω " Αλλιώς εγ$="Εμπόδιο Πίσω "
		Τύπωσε Μέρος $(0), εγ$ : Τύπωσε : Καθαρό εγ$
		Αν Κόσμος.ΈχειΚάτι(παλιόΧ, παλιόΥ) τότε εγ$="Κάτι Έχει Εδώ, " Αλλιώς εγ$="Τίποτα Δεν Έχει Εδώ, "
		Αν ΚάρελΡομπότ=>Εχει=ΔΕΝ_ΥΠΑΡΧΕΙ_ΚΑΤΙ Τότε εγ$="Τίποτα Δεν Έχει ο Σάκος" Αλλιώς εγ$="Κάτι Έχει ο Σάκος"
		εγ$=μορφή$(" = {0} [{1},{2}]", ΚάρελΡομπότ=>Πόσα_Εχει, παλιόΧ, ΥΠ-παλιόΥ+1)
		Τύπωσε Μέρος  $(0), εγ$ : Τύπωσε
		Αν Κόσμος.Πόσα(παλιόΧ, παλιόΥ)>0 Τότε Τύπωσε Μέρος $(0), "Υπάρχουν εδώ ";Κόσμος.Πόσα(παλιόΧ, παλιόΥ);" Μπίμπερ"
		πλάγια πλαγ
	}
	θέση χ1, ψ1
	Ανανέωση 20
Τέλος Ρουτίνας
Ρουτίνα Παιχνίδι()
	Τοπικές κράτα$=Κόσμος.ΠακέτοJson$, ι, δυο=0
	Κόσμος.ΠακέτοJson$=κράτα$
	ΔείξεΚόσμο()
	Καθε 1000/30 {
		Αν Πατημένο(27) τότε
			δυο=2
		Τέλος Αν
		Αν δυο=2 Τότε
			Ανανέωση 20
			Αν ρώτα("Θες να επιστρέψεις στη δημιουργία του Κόσμου?", Τιτλ$, "Ναι", "*Όχι")=1 Τότε
				Κόσμος.ΠακέτοJson$=κράτα$
				ΔείξεΚόσμο()
				Έξοδος Ρουτίνας
			Τέλος Αν
			δυο=0
		Τέλος Αν
		Αν κωδ>0 τότε
			Ενώ Δείκτης		
				Αναμονή 20
			Τέλος Ενώ
			Αν κωδ=504 Τότε			
				δυο++
				Αν δυο<2 Τότε
					Οθόνη : Αναφορά Μνήμη(ΘέσηΣτηΛίστα(Ποιός, Κωδ)!)#Τιμή$(5)
				Τέλος Αν
				Αναμονή 200
			Αλλιώς.Αν κωδ=505 Τότε
				Αν Κόσμος.ΚοίταΜπροστά(ΚάρελΡομπότ, Αληθές, ΜεΉχο) τότε
					Αλλαγή Ποιος(Κωδ),  ΦΟΝΤΟ 1,  ΠΕΝΑ #ddffcc
					ΚάρελΡομπότ=>ΠηγαινεΕμπρός &παλιόΧ, &παλιόΥ
				Τέλος Αν			
				Συνθήκες()
			Αλλιώς.Αν κωδ=506 Τότε
				ΚάρελΡομπότ=>ΚάνεΑριστερά
				Συνθήκες()
			Αλλιώς.Αν κωδ=507 Τότε
				ΜεΉχο~
				Αλλαγή Ποιος(Κωδ),  ΦΟΝΤΟ 1,  ΠΕΝΑ (#ddffcc, 11)#τιμή(Απολ(ΜεΉχο))
				ΚάρελΡομπότ=>ΣβήσεΜε
				Αλλαγή Ποιος(Κωδ),  Πλαισιο 15+ΜεΉχο*4
				ΚάρελΡομπότ=>ΣχεδίασεΠρώτηΦορά
			Τέλος αν
			Αν όχι κωδ=504 τότε δυο=0
			κωδ<=0
			Σάρωσε 0.1
		Αλλιώς
			Για ι=1 έως 5
				Σάρωσε .1
				Αν Πατημένο(65) Τότε
					δυο=0
					Αν Κόσμος.ΈχειΚάτι(παλιόΧ, παλιόΥ) Τότε
						Ανανέωση 10000
						Αν Κόσμος.Πόσα(παλιόΧ, παλιόΥ)=1 τότε 
							ΒάλεΚενό(παλιόΧ, παλιόΥ, ΚάρελΡομπότ=>Βλέπει)			
						Τέλος Αν
						Κόσμος.ΠάρεΚάτι παλιόΧ, παλιόΥ
						Για ΚάρελΡομπότ {
							.Εχει<=ΥΠΑΡΧΕΙ_ΚΑΤΙ
							.Πόσα_Εχει++
							Αν ΜεΉχο Τότε μπιπ
							Σύνολο=.Πόσα_Εχει
						}
						Συνθήκες()
						Ανανέωση 20
						Αναμονή 200
					Τέλος Αν
				Αλλιώς.Αν Πατημένο(88) Τότε
					δυο=0
					Αν ΚάρελΡομπότ=>Εχει=ΥΠΑΡΧΕΙ_ΚΑΤΙ Τότε
						Ανανέωση 10000
						Αν Κόσμος.Πόσα(παλιόΧ, παλιόΥ)=0 τότε
							ΒάλεΚάτι(παλιόΧ, παλιόΥ, ΚάρελΡομπότ=>Βλέπει)
						Τέλος Αν
						Κόσμος.ΒάλεΚάτι παλιόΧ, παλιόΥ
						Για ΚάρελΡομπότ {
							.Πόσα_Εχει--
							Αν ΜεΉχο Τότε μπιπ
							Αν .Πόσα_Εχει=0 Τότε .Εχει<=ΔΕΝ_ΥΠΑΡΧΕΙ_ΚΑΤΙ
						}
						Συνθήκες()
						Ανανέωση 20
						Αναμονή 200
					Τέλος Αν
				Αλλιώς.Αν Πατημένο(2)  ή Πατημένο(27) Τότε
					Έξοδος Για
				Τέλος Αν
			επόμενο
			Αν κωδ=0 και Πατημένο(1) τότε
				δυο=0
				Ενώ Δεικτης
					Αν όχι Κόσμος.ΚοίταΜπροστά(ΚάρελΡομπότ, Αληθές)  τότε εξοδος
					ΚάρελΡομπότ=>ΠηγαινεΕμπρός &παλιόΧ, &παλιόΥ
					Συνθήκες()
					αναμονή 20
				τελος Ενώ
			Αλλιώς.Αν Πατημένο(2) τότε
					δυο=0
					ΚάρελΡομπότ=>ΚάνεΑριστερά
					Συνθήκες()
					Αναμονή 20
			Τέλος αν
		Τέλος αν
	}
Τέλος Ρουτίνας
}
ΤΜΗΜΑ ΓΕΝΙΚΟ Β {function KeyList(json) {
	flush
	with json, "index" as json.index, "count" as json.count ,"KeyToStringPos" as keyName$()
	if json.count=0 then =(,): exit
	for i=0 to json.count-1:data keyname$(i):next
	=array([])
}
declare Json JsonObject
json$={
{
    "description":"A person",
    "type":"object",
    "properties":
        {
            "name":
                {
                    "type":"string"
                },
            "age":
                {
                    "type":"integer",
                    "maximum":125
                }
        }
}
}
method json, "parser", json$ as json
with json, "json" as json.format$(), "item" as json(), "item" as json$()
with json, "itempath" as json.path(), "itempath" as json.path$()

Report json.format$(4)
Print json$("description")
Print json$("type")
Print json.path$("properties.name.type")
Print json.path$("properties|age|type", "|")  ' define different seperator
Print json.path("properties.age.maximum")
method json, "assignpath", "properties.age.maximum", 80
Report json.format$(4)
Print json.format$(0)

list1=Keylist(json.path("properties"))
Print format$("Found {0} properties:", len(list1))
nl$={
}+"	- "
Print #-2,  "	- "+list1#sort()#str$(nl$)


}
ΤΜΗΜΑ ΓΕΝΙΚΟ Γ {Φόρμα 80
λιστα1=("Βορράς", "Ανατολή", "Νότος", "Δύση")
λιστα2=("Ψάχνει ένα Μπίμπερ", "Μαζεύει όλα τα Μπίμπερ", "Βάζει Μπίμπερ σε θέσεις", "Πάει στην Περίμετρο", "Άλλο")
ΠακέτοJson$=Λάμδα$ λιστα1, λιστα2 (Τιτλ$, &Μπ(),  Σακ, ΘΧ, ΘΥ, ΒΛ, ΧΡ,  ΣΚ, ΣΗΜ$) ->{
	Π=Διάσταση(Μπ(), 1)
	Υ=Διάσταση(Μπ(), 2)
	Όρισε ΟρισμόςΚόσμου ΛίσταJson
	Σταθερή μονοπάτι$="assignpath"
	Με ΟρισμόςΚόσμου, "json" ως Φορμάρισμα$(), "item" ως Στοιχείο(), "item" ως Στοιχείο$()
	Με ΟρισμόςΚόσμου, "itempath" ως Εγγραφή(), "itempath" ως Εγγραφή$()
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Magic Id","11223344Karel"
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Locale Id", 1032  ' Ελληνικά
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Τίτλος Κόσμου", Τιτλ$
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Πλάτος", Π
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Ύψος", Υ
	μ=κάθε(λίστα1)
	Ενώ μ
		Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κόσμος.Κατευθύνσεις."+γραφη$(μ^,""),Πίνακας$(μ)
	Τέλος ενώ
	μ=κάθε(λίστα2)
	Ενώ μ
		Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κόσμος.Σκοπός,Επιλογή."+γραφη$(μ^,""),Πίνακας$(μ)
	Τέλος ενώ
	Για ι=0 έως Π-1: Για κ=0 έως Υ-1
		Αν Μπ(ι, κ)>0 Τότε Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κόσμος.Μπιμπερ.["+γραφη$(ι)+","+γραφη$(κ)+"]", Μπ(ι, κ)
	Επόμενο : Επόμενο	
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κόσμος.Σκοπός",ΣΚ
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κάρελ.Σάκος", Σακ
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κάρελ.ΘέσηΧ", ΘΧ
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κάρελ.ΘέσηΥ", ΘΥ
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κάρελ.Βλέπει", ΒΛ   ' δεύτερη επιλογή
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κάρελ.Χρώμα", ΧΡ
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κόσμος.Σημειώσεις", ΣΗΜ$
	
	//Αναφορά Φορμάρισμα$(4)
	=Φορμάρισμα$(4)
	Όρισε ΟρισμόςΚόσμου Τίποτα
}
Πίνακας Μπιμπερ(20, 10)=0
Μπιμπερ(10, 3)=5
Τελικό$=ΠακέτοJson$("ΚΟΣΜΟΣ1", &Μπίμπερ() , 0, 1,1, 1, Χρώμα(11), 0, "")
Αναφορά τελικό$
Όρισε ΟρισμόςΚόσμου ΛίσταJson
Με ΟρισμόςΚόσμου, "itempath" ως Εγγραφή(), "itempath" ως Εγγραφή$()
Μέθοδος  ΟρισμόςΚόσμου, "parser", τελικό$ ως ΟρισμόςΚόσμου
Λίστα1=Εγγραφή("Κόσμος.Κατευθύνσεις")
Λίστα2=Εγγραφή("Κόσμος.Σκοπός,Επιλογή")
Τύπωσε Εγγραφή$("Τίτλος Κόσμου")
Π=Εγγραφή("Πλάτος")
Υ=Εγγραφή("Ύψος")
Τύπωσε "Διαστάσεις:", Π;"x";Υ
Τύπωσε Εγγραφή("Κάρελ.Σάκος")
Τύπωσε Εγγραφή("Κάρελ.ΘέσηΧ")
Τύπωσε Εγγραφή("Κάρελ.ΘέσηΥ")
Τύπωσε Εγγραφή$("Κόσμος.Κατευθύνσεις."+Εγγραφή$("Κάρελ.Βλέπει"))
Τύπωσε Εγγραφή("Κάρελ.Χρώμα")
Τύπωσε  Εγγραφή$("Κόσμος.Σκοπός,Επιλογή."+ Εγγραφή$("Κόσμος.Σκοπός"))
Τύπωσε Εγγραφή("Κόσμος.Μπιμπερ.[3, 1]")=0, "??"
Τύπωσε Εγγραφή("Κόσμος.Μπιμπερ.[10, 3]"), "??"
Πίνακας ΚόσμοςΜπ(Π, Υ)=0
Για ι=0 έως Π-1: Για κ=0 έως Υ-1
	ΚόσμοςΜπ(ι, κ)=Εγγραφή("Κόσμος.Μπιμπερ.["+γραφη$(ι)+","+γραφη$(κ)+"]") 
Επόμενο : Επόμενο
? Τύπος$(ΚόσμοςΜπ(9, 3))
? Τύπος$(ΚόσμοςΜπ(10, 3))
? ΚόσμοςΜπ(10, 3), " τελικό"
Λ1=@Πάρε(Λίστα1)
λ2=@Πάρε(Λίστα2)
Τύπωσε Λ1
Τύπωσε Λ2
Όρισε ΟρισμόςΚόσμου Τίποτα
Σημ {
Τύπωσε Εγγραφή$("Τίτλος Κόσμου")
Τύπωσε Εγγραφή("Πλάτος")
Τύπωσε Εγγραφή("Ύψος")
Τύπωσε  Εγγραφή$("Κόσμος.Σκοπός,Επιλογή."+Εγγραφή$("Κόσμος.Σκοπός"))
Τύπωσε  Εγγραφή$("Κόσμος.Κατευθύνσεις."+Εγγραφή$("Κάρελ.Βλέπει"))
}
Συνάρτηση Πάρε(Λίστα)
	Με Λίστα, "item" ως Στοιχείο$(), "count" ως πόσα
	Σωρός Νέος {
		Για ι=0 έως πόσα-1
			Σειρά Στοιχείο$(ι)
		Επόμενο
		=[]
	}
Τέλος Συνάρτησης
}
ΤΜΗΜΑ ΓΕΝΙΚΟ ΓΓ {όνομαπίνακα$="ΚΟΣΜΟΣ1"
ΧΚ=10
ΨΚ=10
ΣΚ=0
Κάρελ_Βλέπει=2
Σκοπός=1
Σημειώσεις$=""
Καρελ_εισΧ=1
Καρελ_εισΥ=1
Καρελ_χρώμα=Χρώμα(11)
Πίνακας Μπιμπερ(1 εως ΧΚ, 1 εως ΨΚ)
Πίνακας Εμπόδια(1 εως ΧΚ, 1 εως ΨΚ)
Μπιμπερ(1, 2)=3
Λίστα1$={{"\u03A0\u03BB\u03AC\u03C4\u03BF\u03C2" : 20, "\u038E\u03C8\u03BF\u03C2" : 10, "\u0395\u03BC\u03C0\u03CC\u03B4\u03B9\u03B1" : {"1, 1" : 1, "1, 2" : 1, "1, 3" : 1, "1, 4" : 1, "1, 5" : 1, "1, 6" : 1, "1, 7" : 1, "1, 8" : 1, "1, 9" : 1, "2, 1" : 1, "2, 5" : 3, "2, 9" : 1, "3, 1" : 1, "3, 4" : 1, "3, 5" : 1, "3, 6" : 1, "3, 9" : 1, "4, 1" : 1, "4, 5" : 1, "4, 9" : 1, "5, 1" : 3, "5, 2" : 3, "5, 3" : 3, "5, 4" : 3, "5, 5" : 3, "5, 6" : 3, "5, 7" : 3, "5, 8" : 3, "5, 9" : 3, "6, 1" : 1, "6, 4" : 1, "6, 5" : 2, "6, 9" : 1, "7, 1" : 1, "7, 4" : 1, "7, 5" : 2, "7, 9" : 1, "8, 1" : 1, "8, 2" : 1, "8, 3" : 2, "8, 4" : 1, "8, 5" : 2, "8, 6" : 1, "8, 7" : 1, "8, 8" : 1, "8, 9" : 1, "9, 1" : 1, "9, 2" : 3, "9, 3" : 2, "9, 4" : 3, "9, 5" : 1, "9, 9" : 1, "10, 1" : 1, "10, 2" : 1, "10, 4" : 3, "10, 5" : 2, "10, 9" : 1, "11, 1" : 1, "11, 3" : 3, "11, 4" : 2, "11, 5" : 1, "11, 9" : 1, "12, 1" : 1, "12, 2" : 3, "12, 3" : 1, "12, 4" : 1, "12, 5" : 3, "12, 6" : 1, "12, 7" : 1, "12, 8" : 1, "12, 9" : 1, "13, 1" : 1, "13, 2" : 2, "13, 3" : 3, "13, 5" : 3, "13, 9" : 1, "14, 1" : 1, "14, 3" : 2, "14, 5" : 1, "14, 9" : 1, "15, 1" : 3, "15, 2" : 1, "15, 3" : 1, "15, 4" : 1, "15, 5" : 2, "15, 6" : 1, "15, 7" : 1, "15, 8" : 1, "15, 9" : 1, "16, 1" : 1, "16, 5" : 1, "16, 9" : 1, "17, 1" : 1, "17, 5" : 1, "17, 9" : 1, "18, 1" : 1, "18, 2" : 3, "18, 3" : 1, "18, 4" : 1, "18, 5" : 1, "18, 6" : 1, "18, 7" : 1, "18, 8" : 1, "18, 9" : 2, "19, 1" : 1, "19, 2" : 4, "19, 3" : 4, "19, 4" : 4, "19, 5" : 4, "19, 6" : 4, "19, 7" : 4, "19, 8" : 4, "19, 9" : 1}, "\u039C\u03C0\u03B9\u03BC\u03C0\u03B5\u03C1" : {"2, 4" : 1, "2, 8" : 1, "2, 9" : 1, "3, 3" : 1, "3, 6" : 1, "4, 2" : 1, "5, 4" : 1, "6, 2" : 1, "6, 4" : 1, "6, 8" : 1, "7, 4" : 1, "9, 2" : 1, "9, 3" : 1, "9, 4" : 1, "9, 9" : 1, "10, 3" : 1, "10, 4" : 1, "10, 6" : 1, "10, 7" : 1, "11, 2" : 1, "11, 4" : 1, "11, 5" : 1, "13, 3" : 1, "15, 6" : 1, "15, 7" : 1, "16, 3" : 1, "17, 3" : 1, "17, 9" : 1, "18, 9" : 1, "19, 6" : 1}}}


Τελικό$=@ΠακέτοJson$(όνομαπίνακα$,Λίστα1$, ΣΚ, Καρελ_εισΧ, Καρελ_εισΥ, Κάρελ_Βλέπει, Καρελ_χρώμα, Σκοπός-1, Σημειώσεις$)
Αναφορά 3, τελικό$
Πρόχειρο "{"+Τελικό$+"}"

Συνάρτηση ΠακέτοJson$(Τιτλ$, ΛίσταJson$, Σακ, ΘΧ, ΘΥ, ΒΛ, ΧΡ,  ΣΚ, ΣΗΜ$)
	Τοπική μονοπάτι$="assignpath"
	Όρισε Τοπικό ΟρισμόςΚόσμου ΛίσταJson
	Μέθοδος ΟρισμόςΚόσμου, "parser", ΛίσταJson$ ως νεο Λιστα1
	Με ΟρισμόςΚόσμου, "json" ως Φορμάρισμα$(), "item" ως Στοιχείο(), "item" ως Στοιχείο$()
	Με ΟρισμόςΚόσμου, "itempath" ως Εγγραφή(), "itempath" ως Εγγραφή$()
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Magic Id","11223344Karel"
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Locale Id", 1032  ' Ελληνικά
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Τίτλος Κόσμου", Τιτλ$
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κόσμος", Λίστα1
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κόσμος.Σκοπός",ΣΚ
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κάρελ.Σάκος", Σακ
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κάρελ.ΘέσηΧ", ΘΧ
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κάρελ.ΘέσηΥ", ΘΥ
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κάρελ.Βλέπει", ΒΛ
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κάρελ.Χρώμα", ΧΡ
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Κόσμος.Σημειώσεις", ΣΗΜ$
	=Φορμάρισμα$(4)
	Όρισε ΟρισμόςΚόσμου Τίποτα
Τέλος Συνάρτησης
Συνάρτηση ΠακέτοJson1$(&Μπ(), &Εμ()) {
	Π=Διάσταση(Μπ(), 1)
	Υ=Διάσταση(Μπ(), 2)
	Σταθερή μονοπάτι$="assignpath"
	Όρισε ΟρισμόςΚόσμου ΛίσταJson	
	Με ΟρισμόςΚόσμου, "json" ως Φορμάρισμα$()
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Πλάτος", Π
	Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Ύψος", Υ
	Για ι=1 έως Π: Για κ=1 έως Υ
		Αν Μπ(ι, κ)>0 Τότε Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Μπιμπερ.["+γραφη$(ι)+","+γραφη$(κ)+"]", Μπ(ι, κ)
		Αν Εμ(ι, κ)<>0 Τότε Μέθοδος ΟρισμόςΚόσμου, μονοπάτι$, "Εμπόδια.["+γραφη$(ι)+","+γραφη$(κ)+"]", Εμ(ι, κ)
	Επόμενο : Επόμενο
	=Φορμάρισμα$(0)
	Όρισε ΟρισμόςΚόσμου Τίποτα
}
}
ΤΜΗΜΑ ΓΕΝΙΚΟ ΑΑΑ {{"\u03A0\u03BB\u03AC\u03C4\u03BF\u03C2" : 20, "\u038E\u03C8\u03BF\u03C2" : 10, "\u0395\u03BC\u03C0\u03CC\u03B4\u03B9\u03B1" : {"1, 1" : 1, "1, 2" : 1, "1, 3" : 1, "1, 4" : 1, "1, 5" : 1, "1, 6" : 1, "1, 7" : 1, "1, 8" : 1, "1, 9" : 1, "2, 1" : 1, "2, 5" : 3, "2, 9" : 1, "3, 1" : 1, "3, 4" : 1, "3, 5" : 1, "3, 6" : 1, "3, 9" : 1, "4, 1" : 1, "4, 5" : 1, "4, 9" : 1, "5, 1" : 3, "5, 2" : 3, "5, 3" : 3, "5, 4" : 3, "5, 5" : 3, "5, 6" : 3, "5, 7" : 3, "5, 8" : 3, "5, 9" : 3, "6, 1" : 1, "6, 4" : 1, "6, 5" : 2, "6, 9" : 1, "7, 1" : 1, "7, 4" : 1, "7, 5" : 2, "7, 9" : 1, "8, 1" : 1, "8, 2" : 1, "8, 3" : 2, "8, 4" : 1, "8, 5" : 2, "8, 6" : 1, "8, 7" : 1, "8, 8" : 1, "8, 9" : 1, "9, 1" : 1, "9, 2" : 3, "9, 3" : 2, "9, 4" : 3, "9, 5" : 1, "9, 9" : 1, "10, 1" : 1, "10, 2" : 1, "10, 4" : 3, "10, 5" : 2, "10, 9" : 1, "11, 1" : 1, "11, 3" : 3, "11, 4" : 2, "11, 5" : 1, "11, 9" : 1, "12, 1" : 1, "12, 2" : 3, "12, 3" : 1, "12, 4" : 1, "12, 5" : 3, "12, 6" : 1, "12, 7" : 1, "12, 8" : 1, "12, 9" : 1, "13, 1" : 1, "13, 2" : 2, "13, 3" : 3, "13, 5" : 3, "13, 9" : 1, "14, 1" : 1, "14, 3" : 2, "14, 5" : 1, "14, 9" : 1, "15, 1" : 3, "15, 2" : 1, "15, 3" : 1, "15, 4" : 1, "15, 5" : 2, "15, 6" : 1, "15, 7" : 1, "15, 8" : 1, "15, 9" : 1, "16, 1" : 1, "16, 5" : 1, "16, 9" : 1, "17, 1" : 1, "17, 5" : 1, "17, 9" : 1, "18, 1" : 1, "18, 2" : 3, "18, 3" : 1, "18, 4" : 1, "18, 5" : 1, "18, 6" : 1, "18, 7" : 1, "18, 8" : 1, "18, 9" : 2, "19, 1" : 1, "19, 2" : 4, "19, 3" : 4, "19, 4" : 4, "19, 5" : 4, "19, 6" : 4, "19, 7" : 4, "19, 8" : 4, "19, 9" : 1}, "\u039C\u03C0\u03B9\u03BC\u03C0\u03B5\u03C1" : {"2, 4" : 1, "2, 8" : 1, "2, 9" : 1, "3, 3" : 1, "3, 6" : 1, "4, 2" : 1, "5, 4" : 1, "6, 2" : 1, "6, 4" : 1, "6, 8" : 1, "7, 4" : 1, "9, 2" : 1, "9, 3" : 1, "9, 4" : 1, "9, 9" : 1, "10, 3" : 1, "10, 4" : 1, "10, 6" : 1, "10, 7" : 1, "11, 2" : 1, "11, 4" : 1, "11, 5" : 1, "13, 3" : 1, "15, 6" : 1, "15, 7" : 1, "16, 3" : 1, "17, 3" : 1, "17, 9" : 1, "18, 9" : 1, "19, 6" : 1}}
}
ΤΜΗΜΑ ΓΕΝΙΚΟ ΑΑ1 {Συνάρτηση Κόσμος_ΑλλαγήΓραμμής {
	Θέση αρχηΓραμμήςΧ,  αρχηΓραμμής+ΚΑ*ΓραμμήΚ
	Κελί=0
	Οριζόντιο=0
	ΓραμμήΚ++	
}
Συνάρτηση Κόσμος_ΔεξιάΚενό {
	Βήμα ΚΑ
	Κελί++
	τοπικη χ=θεση.χ, ψ=θέση.ψ
	Κύκλος Γέμισμα Φόντο1, ΚΑ/8,1, Φόντο1
	Αν ΓραμμηΚ=1 Τότε
		Θέση χ, ψ
		Χαράξε 0, ΚΣ, ΓραμμηΧρ
	Αλλιώς.Αν ΓραμμήΚ=ΥΠ Τότε
		Θέση χ, ψ
		Χαράξε 0, -ΚΣ-Υψος.Σημείου, ΓραμμηΧρ ', ΓραμμηΧρ
	Αλλιώς
		Θέση χ, ψ -ΚΣ
		Χαράξε 0, ΚΑ, ΓραμμηΧρ
	Τέλος Αν
	Αν Κελί=1 Τότε
		Θέση χ, ψ
		Χαράξε  ΚΣ, 0, ΓραμμηΧρ
	Αλλιώς.Αν Κελί=ΧΠ τότε
		Θέση χ, ψ
		Χαράξε  -ΚΣ-Πλάτος.Σημείου, 0, ΓραμμηΧρ
	Αλλιώς
		Θέση χ-ΚΣ, ψ
		Χαράξε  ΚΑ, 0, ΓραμμηΧρ
	Τέλος Αν
	θέση χ, ψ
	Οριζόντιο=0
	Αν Υπάρχει(Προηγούμενη, Κελι) Τότε
		Αφαίρεση Προηγούμενη, Κελι
		θέση χ, ψ
	Τέλος αν
}
Συνάρτηση Κόσμος_ΔεξιάΚάτι {
	Κύκλος Γέμισμα ΚάτιΧρ, ΚΑ/8, 1, ΚάτιΧρ
}
Συνάρτηση Κόσμος_ΔεξιάΕμπόδιο {
	Διάβασε Νέο Τι
	Βήμα ΚΑ
	Κελί++
	τοπικη χ=θεση.χ, ψ=θέση.ψ
	Αν ΓραμμηΚ=1 Τότε
		Θέση χ, ψ
		Χαράξε 0, ΚΣ, ΓραμμηΧρ
	Αλλιώς.Αν ΓραμμήΚ=ΥΠ Τότε
		Θέση χ, ψ
		Χαράξε 0, -ΚΣ, ΓραμμηΧρ
	Αλλιώς
		Θέση χ, ψ -ΚΣ
		Χαράξε 0, ΚΑ, ΓραμμηΧρ
	Τέλος Αν
	Αν Κελί=1 Τότε
		Θέση χ, ψ
		Χαράξε  ΚΣ, 0, ΓραμμηΧρ
	Αλλιώς.Αν Κελί=ΧΠ τότε
		Θέση χ, ψ
		Χαράξε  -ΚΣ, 0, ΓραμμηΧρ
	Αλλιώς
		Θέση χ-ΚΣ, ψ
		Χαράξε  ΚΑ, 0, ΓραμμηΧρ
	Τέλος Αν
	θέση χ, ψ
	Αν Οριζόντιο<>0 και Τι<ΑΚΡΟ τότε
		Αν Κελί<ΧΠ τότε
			Αν Οριζόντιο=-1 τότε
				θέση χ-ΚΣ, ψ+ΚΣ
				Πάχος 4 {Χάραξε ΚΑ, 0, Τοίχος}
				Οριζόντιο=Κελί
			αλλιώς
				θέση χ-ΚΣ, ψ+ΚΣ
				Πάχος 4 {Χάραξε ΚΑ, 0, Τοίχος}
			Τέλος αν
		Τέλος Αν
		θέση χ, ψ
	Αλλιώς
		Οριζόντιο=-1
	Τέλος αν
	Αν Τι=ΑΚΡΟ Τότε
	Αλλιώς.Αν Υπάρχει(Προηγούμενη, Κελι) Τότε
		Αν Τι<>ΚΑΤΩΑΚΡΟ τότε
			Αν ΓραμμήΚ<ΥΠ τότε
				θέση χ+ΚΣ, ψ-ΚΣ
				Πάχος 4 {Χάραξε  0, ΚΑ, Τοίχος}
			Τέλος αν
		Τέλος Αν
		θέση χ, ψ
	Αλλιώς
		Προσθήκη Προηγούμενη, Κελί
	Τέλος αν
}
}
ΤΜΗΜΑ ΓΕΝΙΚΟ ΑΑ {λίστα1$={{    
          "Magic Id" : "11223344Karel",
          "Locale Id" : 1032,
          "\u03A4\u03AF\u03C4\u03BB\u03BF\u03C2 \u039A\u03CC\u03C3\u03BC\u03BF\u03C5" : "\u039A\u039F\u03A3\u039C\u039F\u03A31",
          "\u039A\u03CC\u03C3\u03BC\u03BF\u03C2" : {        
              "\u03A0\u03BB\u03AC\u03C4\u03BF\u03C2" : 20,
              "\u038E\u03C8\u03BF\u03C2" : 10,
              "\u0395\u03BC\u03C0\u03CC\u03B4\u03B9\u03B1" : {            
                  "1, 1" : 1,  "1, 2" : 1, "1, 3" : 1, "1, 4" : 1, "1, 5" : 1, "1, 6" : 1, "1, 7" : 1, "1, 8" : 1, "1, 9" : 1,
                  "2, 1" : 1, "2, 5" : 3, "2, 9" : 1, "3, 1" : 1, "3, 4" : 1, "3, 5" : 1, "3, 6" : 1, "3, 9" : 1, "4, 1" : 1,
                  "4, 5" : 1, "4, 9" : 1, "5, 1" : 3, "5, 2" : 3, "5, 3" : 3, "5, 4" : 3, "5, 5" : 3, "5, 6" : 3, "5, 7" : 3,
                  "5, 8" : 3, "5, 9" : 3, "6, 1" : 1, "6, 4" : 1, "6, 5" : 2, "6, 9" : 1, "7, 1" : 1, "7, 4" : 1, "7, 5" : 2,
                  "7, 9" : 1, "8, 1" : 1, "8, 2" : 1, "8, 3" : 2, "8, 4" : 1, "8, 5" : 2, "8, 6" : 1, "8, 7" : 1, "8, 8" : 1,
                  "8, 9" : 1, "9, 1" : 1, "9, 2" : 3, "9, 3" : 2, "9, 4" : 3, "9, 5" : 1, "9, 9" : 1, "10, 1" : 1, "10, 2" : 1,
                  "10, 4" : 3, "10, 5" : 2, "10, 9" : 1, "11, 1" : 1, "11, 3" : 3, "11, 4" : 2, "11, 5" : 1, "11, 9" : 1,
                  "12, 1" : 1, "12, 2" : 3, "12, 3" : 1, "12, 4" : 1, "12, 5" : 3, "12, 6" : 1, "12, 7" : 1, "12, 8" : 1,
                  "12, 9" : 1, "13, 1" : 1, "13, 2" : 2, "13, 3" : 3, "13, 5" : 3, "13, 9" : 1, "14, 1" : 1, "14, 3" : 2,
                  "14, 5" : 1, "14, 9" : 1, "15, 1" : 3, "15, 2" : 1, "15, 3" : 1, "15, 4" : 1, "15, 5" : 2, "15, 6" : 1,
                  "15, 7" : 1, "15, 8" : 1, "15, 9" : 1, "16, 1" : 1, "16, 5" : 1, "16, 9" : 1, "17, 1" : 1, "17, 5" : 1,
                  "17, 9" : 1, "18, 1" : 1, "18, 2" : 3, "18, 3" : 1, "18, 4" : 1, "18, 5" : 1, "18, 6" : 1, "18, 7" : 1,
                  "18, 8" : 1, "18, 9" : 2, "19, 1" : 1, "19, 2" : 4, "19, 3" : 4, "19, 4" : 4, "19, 5" : 4, "19, 6" : 4,
                  "19, 7" : 4, "19, 8" : 4, "19, 9" : 1
              },
              "\u039C\u03C0\u03B9\u03BC\u03C0\u03B5\u03C1" : {            
                  "2, 4" : 1, "2, 8" : 1, "2, 9" : 1, "3, 3" : 1, "3, 6" : 1, "4, 2" : 1, "5, 4" : 1, "6, 2" : 1, "6, 4" : 1,
                  "6, 8" : 1, "7, 4" : 1, "9, 2" : 1, "9, 3" : 1, "9, 4" : 1, "9, 9" : 1, "10, 3" : 1, "10, 4" : 1, "10, 6" : 1,
                  "10, 7" : 1, "11, 2" : 1, "11, 4" : 1, "11, 5" : 1, "13, 3" : 1, "15, 6" : 1, "15, 7" : 1, "16, 3" : 1,
                  "17, 3" : 1, "17, 9" : 1, "18, 9" : 1, "19, 6" : 1
              },
              "\u03A3\u03BA\u03BF\u03C0\u03CC\u03C2" : 0,
              "\u03A3\u03B7\u03BC\u03B5\u03B9\u03CE\u03C3\u03B5\u03B9\u03C2" : ""
          },
          "\u039A\u03AC\u03C1\u03B5\u03BB" : {        
              "\u03A3\u03AC\u03BA\u03BF\u03C2" : 0,
              "\u0398\u03AD\u03C3\u03B7\u03A7" : 1,
              "\u0398\u03AD\u03C3\u03B7\u03A5" : 1,
              "\u0392\u03BB\u03AD\u03C0\u03B5\u03B9" : 2,
              "\u03A7\u03C1\u03CE\u03BC\u03B1" : -16776960
          }
      }
}
'ΝέοςΚόσμοςΑπόΛίστα({{"Magic Id":"11223344Karel"}})
'ΝέοςΚόσμοςΑπόΛίστα({{}})
ΝέοςΚόσμοςΑπόΛίστα(λίστα1$)
Ρουτίνα ΝέοςΚόσμοςΑπόΛίστα(ΛίσταJson$)
	Όρισε Τοπικό ΟρισμόςΚόσμου ΛίσταJson
	Με ΟρισμόςΚόσμου, "itempath" ως Εγγραφή(), "itempath" ως Εγγραφή$()
	Μέθοδος ΟρισμόςΚόσμου, "parser", ΛίσταJson$ ως νέο Λίστα1    ' ή ως ΟρισμόςΚόσμου αν δεν μας ενδιαφέρει να το χάσουμε!
	Αν Τύπος$(Λίστα1)="JsonObject" Τότε    ' εχουμε αντικείμενο Json
	 	ΟρισμόςΚόσμου=Λίστα1
		Αν Εγγραφή$("Magic Id")="11223344Karel" Τότε 'δικό μας json
			Τύπωσε Εγγραφή$("Τίτλος Κόσμου")

			Τύπωσε Εγγραφή("Κάρελ.Σάκος")
			Τύπωσε Εγγραφή("Κάρελ.ΘέσηΧ")
			Τύπωσε Εγγραφή("Κάρελ.ΘέσηΥ")
			Τύπωσε Εγγραφή("Κάρελ.Βλέπει")
			Τύπωσε Εγγραφή("Κάρελ.Χρώμα")
			ΌρισεΚόσμος=Εγγραφή("Κόσμος")
			Με ΟρισμόςΚόσμου, "json" ως Φορμάρισμα$()
			Αναφορά Φορμάρισμα$(4)
'			Τύπωσε Εγγραφή("Πλάτος")
	'		Τύπωσε Εγγραφή$("Ύψος")
		'	Τύπωσε Εγγραφή("Σκοπός")
			'Τύπωσε Εγγραφή$("Σημειώσεις")
		Τέλος Αν
	Τέλος Αν
Τέλος Ρουτίνας
}
ΤΜΗΜΑ ΓΕΝΙΚΟ ΑΑ2 {ΝέοςΚόσμοςΑπόΛίστα({ { "Magic Id" : "11223344Karel" } })
'ΝέοςΚόσμοςΑπόΛίστα({{}})
'ΝέοςΚόσμοςΑπόΛίστα(λίστα1$)
Ρουτίνα ΝέοςΚόσμοςΑπόΛίστα(ΛίσταJson$)
	Όρισε Τοπικό ΟρισμόςΚόσμου ΛίσταJson
	Με ΟρισμόςΚόσμου, "itempath" ως Εγγραφή(), "itempath" ως Εγγραφή$()
	Μέθοδος ΟρισμόςΚόσμου, "parser", ΛίσταJson$ ως νέο Λίστα1
	Αν Τύπος$(Λίστα1)="JsonObject" Τότε    ' εχουμε αντικείμενο Json
	 	ΟρισμόςΚόσμου=Λίστα1
		Τύπωσε "Είναι Αντικείμενο JsonObject"
		Τύπωσε Εγγραφή$("[Magic Id]")
		Αν Εγγραφή$("Magic Id")="11223344Karel" Τότε 'δικό μας json
			Τύπωσε "Είναι δικό μας"
			Τύπωσε Εγγραφή("Πλάτος")
			Τύπωσε Εγγραφή("Ύψος")
			Τύπωσε Εγγραφή("Κάρελ.Σάκος")
			Τύπωσε Εγγραφή("Κάρελ.ΘέσηΧ")
			Τύπωσε Εγγραφή("Κάρελ.ΘέσηΥ")
			Τύπωσε Εγγραφή("Κάρελ.Βλέπει")
			Τύπωσε Εγγραφή("Κάρελ.Χρώμα")
			Τύπωσε Εγγραφή("Κόσμος.Σκοπός")
		Τέλος Αν
	Τέλος Αν
Τέλος Ρουτίνας
}
ΤΜΗΜΑ ΓΕΝΙΚΟ ΑΒ {	Αν κωδ=-1 Τότε
		δοκιμη
		Αν Υπάρχει.Νέο	Τότε ΕξαγωγήΚόσμου()
		Αν Υπάρχει.Νέο Τότε
			Αν Ρώτα("Θές σίγουρα να κλείσεις το πρόγραμμα", τιτλ$, "Ναι", "*Όχι")=1 Τότε Έξοδος
		Αλλιώς
			έξοδος
		Τέλος
	Αλλιώς.
}
